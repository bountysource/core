---
http_interactions:
- request:
    method: get
    uri: http://twistedmatrix.com/trac/ticket/1228
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/35.0.1916.153 Safari/537.36
  response:
    status:
      code: 200
      message: Ok
    headers:
      Server:
      - TwistedWeb/11.1.0
      Date:
      - Thu, 19 Nov 2015 19:37:17 GMT
      Content-Length:
      - '32206'
      Set-Cookie:
      - trac_form_token=e0c9737ef266ba8568080f67; httponly; Path=/trac
      - trac_session=cc903fa51b728d6589235f11; expires=Wed, 17-Feb-2016 19:37:19 GMT;
        httponly; Path=/trac
      Expires:
      - Fri, 01 Jan 1999 00:00:00 GMT
      Cache-Control:
      - must-revalidate
      Content-Type:
      - text/html;charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Nov 2015 19:37:21 GMT
- request:
    method: get
    uri: https://gitlab.com/api/v4/projects/http:%2F%2Ftwistedmatrix.com%2Ftrac%2Fticket%2F1228
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Private-Token:
      - yk4sv48-tHyUJNBkcf56
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Server:
      - nginx
      Date:
      - Wed, 13 Jun 2018 15:43:17 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '35'
      Cache-Control:
      - no-cache
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Request-Id:
      - 735d852f-e579-42a0-a7e4-b701492ffb58
      X-Runtime:
      - '0.030350'
      Ratelimit-Limit:
      - '600'
      Ratelimit-Observed:
      - '5'
      Ratelimit-Remaining:
      - '595'
      Ratelimit-Reset:
      - '1528904657'
      Ratelimit-Resettime:
      - Thu, 13 Jun 2018 15:44:17 GMT
    body:
      encoding: UTF-8
      string: '{"message":"404 Project Not Found"}'
    http_version: 
  recorded_at: Wed, 13 Jun 2018 15:43:17 GMT
recorded_with: VCR 4.0.0
