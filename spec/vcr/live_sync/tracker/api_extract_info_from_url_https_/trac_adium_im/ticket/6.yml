---
http_interactions:
- request:
    method: get
    uri: https://trac.adium.im/ticket/6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/35.0.1916.153 Safari/537.36
  response:
    status:
      code: 200
      message: Ok
    headers:
      Date:
      - Thu, 19 Nov 2015 19:37:12 GMT
      Server:
      - Apache/2.2.3 (CentOS)
      Cache-Control:
      - must-revalidate
      Expires:
      - Fri, 01 Jan 1999 00:00:00 GMT
      Set-Cookie:
      - trac_form_token=5994ce45fc9296f463f1a140; httponly; Path=/
      - trac_session=65b5d7c2919111985e8ab9ac; expires=Wed, 17-Feb-2016 19:37:14 GMT;
        httponly; Path=/
      Strict-Transport-Security:
      - max-age=2628000
      Content-Length:
      - '113464'
      Vary:
      - Accept-Encoding
      Connection:
      - close
      Content-Type:
      - text/html;charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Nov 2015 19:37:14 GMT
- request:
    method: get
    uri: https://gitlab.com/api/v4/projects/https:%2F%2Ftrac.adium.im%2Fticket%2F6
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Private-Token:
      - yk4sv48-tHyUJNBkcf56
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Server:
      - nginx
      Date:
      - Wed, 13 Jun 2018 15:43:11 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '35'
      Cache-Control:
      - no-cache
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Request-Id:
      - c380f3f6-733d-4a8f-9300-632cac818324
      X-Runtime:
      - '0.028930'
      Ratelimit-Limit:
      - '600'
      Ratelimit-Observed:
      - '2'
      Ratelimit-Remaining:
      - '598'
      Ratelimit-Reset:
      - '1528904651'
      Ratelimit-Resettime:
      - Thu, 13 Jun 2018 15:44:11 GMT
    body:
      encoding: UTF-8
      string: '{"message":"404 Project Not Found"}'
    http_version: 
  recorded_at: Wed, 13 Jun 2018 15:43:11 GMT
recorded_with: VCR 4.0.0
