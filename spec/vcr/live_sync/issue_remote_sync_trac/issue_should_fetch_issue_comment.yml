---
http_interactions:
- request:
    method: get
    uri: http://trac.edgewall.org/ticket/10755
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/35.0.1916.153 Safari/537.36
  response:
    status:
      code: 200
      message: Ok
    headers:
      Date:
      - Thu, 19 Nov 2015 19:33:05 GMT
      Server:
      - Apache/2.2.22 (Debian)
      Cache-Control:
      - must-revalidate
      Expires:
      - Fri, 01 Jan 1999 00:00:00 GMT
      Set-Cookie:
      - trac_form_token=0b443c484978d36068c4fbed; httponly; Path=/
      - trac_session=f6b4245846585df830803223; expires=Wed, 17 Feb 2016 19:33:05 GMT;
        httponly; Path=/
      Content-Length:
      - '55932'
      Vary:
      - Accept-Encoding
      Content-Type:
      - text/html;charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 19 Nov 2015 19:33:06 GMT
- request:
    method: get
    uri: http://trac.edgewall.org/ticket/10755
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_4) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/35.0.1916.153 Safari/537.36
  response:
    status:
      code: 200
      message: Ok
    headers:
      Date:
      - Thu, 19 Nov 2015 19:33:06 GMT
      Server:
      - Apache/2.2.22 (Debian)
      Cache-Control:
      - must-revalidate
      Expires:
      - Fri, 01 Jan 1999 00:00:00 GMT
      Set-Cookie:
      - trac_form_token=83cee70437485e88ef073fbd; httponly; Path=/
      - trac_session=449c51ce7d02a587406fd622; expires=Wed, 17 Feb 2016 19:33:06 GMT;
        httponly; Path=/
      Content-Length:
      - '55932'
      Vary:
      - Accept-Encoding
      Content-Type:
      - text/html;charset=utf-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgU3RyaWN0Ly9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXN0cmljdC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgCiAgCgogIAoKCiAgPGhlYWQ+CiAgICA8dGl0bGU+CiAgICAgICMxMDc1NSAoQ29tbWl0VGlja2V0VXBkYXRlciBkb2VzIG5vdCBhbGxvdyB1c2VyIHRvIGRlZmluZSB3aGF0IHN0YXRlIHRvIGp1bXAgdG8pCiAgICAg4oCTIFRoZSBUcmFjIFByb2plY3QKICAgIDwvdGl0bGU+CiAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiIC8+CiAgICA8IS0tW2lmIElFXT48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGlmICgvXiNfX21zaWUzMDM6Ly50ZXN0KHdpbmRvdy5sb2NhdGlvbi5oYXNoKSkKICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaGFzaC5yZXBsYWNlKC9eI19fbXNpZTMwMzovLCAnIycpKTsKICAgIDwvc2NyaXB0PjwhW2VuZGlmXS0tPgogICAgICAgICAgPGxpbmsgcmVsPSJzZWFyY2giIGhyZWY9Ii9zZWFyY2giIC8+CiAgICAgICAgICA8bGluayByZWw9InByZXYiIGhyZWY9Ii90aWNrZXQvMTA3NTQiIHRpdGxlPSJUaWNrZXQgIzEwNzU0IiAvPgogICAgICAgICAgPGxpbmsgcmVsPSJsYXN0IiBocmVmPSIvdGlja2V0LzEyMjUzIiB0aXRsZT0iVGlja2V0ICMxMjI1MyIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iL3dpa2kvVHJhY0d1aWRlIiAvPgogICAgICAgICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIGhyZWY9Ii90aWNrZXQvMTA3NTU/Zm9ybWF0PWNzdiIgdHlwZT0idGV4dC9jc3YiIGNsYXNzPSJjc3YiIHRpdGxlPSJDb21tYS1kZWxpbWl0ZWQgVGV4dCIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSIvdGlja2V0LzEwNzU1P2Zvcm1hdD10YWIiIHR5cGU9InRleHQvdGFiLXNlcGFyYXRlZC12YWx1ZXMiIGNsYXNzPSJ0YWIiIHRpdGxlPSJUYWItZGVsaW1pdGVkIFRleHQiIC8+CiAgICAgICAgICA8bGluayByZWw9ImFsdGVybmF0ZSIgaHJlZj0iL3RpY2tldC8xMDc1NT9mb3JtYXQ9cnNzIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIiBjbGFzcz0icnNzIiB0aXRsZT0iUlNTIEZlZWQiIC8+CiAgICAgICAgICA8bGluayByZWw9Im5leHQiIGhyZWY9Ii90aWNrZXQvMTA3NTYiIHRpdGxlPSJUaWNrZXQgIzEwNzU2IiAvPgogICAgICAgICAgPGxpbmsgcmVsPSJzdGFydCIgaHJlZj0iL3dpa2kiIC8+CiAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jaHJvbWUvY29tbW9uL2Nzcy90cmFjLmNzcyIgdHlwZT0idGV4dC9jc3MiIC8+CiAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jaHJvbWUvY29tbW9uL2Nzcy90aWNrZXQuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nocm9tZS9jb21tb24vY3NzL2pxdWVyeS11aS9qcXVlcnktdWkuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nocm9tZS9jb21tb24vY3NzL2pxdWVyeS11aS1hZGRvbnMuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nocm9tZS93aWtpZXh0cmFzL2Nzcy9waHJhc2VzLmNzcyIgdHlwZT0idGV4dC9jc3MiIC8+CiAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9jaHJvbWUvd2lraWV4dHJhcy9jc3MvYm94ZXMuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nocm9tZS93aWtpZXh0cmFzL2Nzcy9ib3hlcy0zMDAuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgLz4KICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Nocm9tZS93aWtpZXh0cmFzL2Nzcy9ib3hlcy1uYXJyb3ctdG9jLmNzcyIgdHlwZT0idGV4dC9jc3MiIC8+CiAgICAgICAgICA8bGluayByZWw9Imljb24iIGhyZWY9Ii9mYXZpY29uLmljbyIgdHlwZT0iaW1hZ2UveC1pY29uIiAvPgogICAgICAgICAgPGxpbmsgcmVsPSJmaXJzdCIgaHJlZj0iL3RpY2tldC8xIiB0aXRsZT0iVGlja2V0ICMxIiAvPgogICAgPHN0eWxlIGlkPSJ0cmFjLW5vc2NyaXB0IiB0eXBlPSJ0ZXh0L2NzcyI+LnRyYWMtbm9zY3JpcHQgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQgfTwvc3R5bGU+CiAgICAgIDxsaW5rIHR5cGU9ImFwcGxpY2F0aW9uL29wZW5zZWFyY2hkZXNjcmlwdGlvbit4bWwiIHJlbD0ic2VhcmNoIiBocmVmPSIvc2VhcmNoL29wZW5zZWFyY2giIHRpdGxlPSJTZWFyY2ggVGhlIFRyYWMgUHJvamVjdCIgLz4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgdmFyIGF1dG9fcHJldmlld190aW1lb3V0PTIuMDsKICAgICAgdmFyIGZvcm1fdG9rZW49IjgzY2VlNzA0Mzc0ODVlODhlZjA3M2ZiZCI7CiAgICAgIHZhciBqcXVlcnlfdWk9eyJhbXBtIjp0cnVlLCJkYXRlX2Zvcm1hdCI6Ik0gZCwgeXkiLCJkYXlfbmFtZXMiOnsiYWJicmV2aWF0ZWQiOlsiU3VuIiwiTW9uIiwiVHVlIiwiV2VkIiwiVGh1IiwiRnJpIiwiU2F0Il0sIm5hcnJvdyI6WyJTIiwiTSIsIlQiLCJXIiwiVCIsIkYiLCJTIl0sIndpZGUiOlsiU3VuZGF5IiwiTW9uZGF5IiwiVHVlc2RheSIsIldlZG5lc2RheSIsIlRodXJzZGF5IiwiRnJpZGF5IiwiU2F0dXJkYXkiXX0sImZpcnN0X3dlZWtfZGF5IjowLCJtb250aF9uYW1lcyI6eyJhYmJyZXZpYXRlZCI6WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXSwid2lkZSI6WyJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsIkp1bHkiLCJBdWd1c3QiLCJTZXB0ZW1iZXIiLCJPY3RvYmVyIiwiTm92ZW1iZXIiLCJEZWNlbWJlciJdfSwic2hvd190aW1lem9uZSI6ZmFsc2UsInRpbWVfZm9ybWF0IjoiaDptbTpzcyBUVCIsInRpbWVwaWNrZXJfc2VwYXJhdG9yIjoiICIsInRpbWV6b25lX2lzbzg2MDEiOmZhbHNlLCJ0aW1lem9uZV9saXN0IjpbeyJsYWJlbCI6IiswMDowMCIsInZhbHVlIjoiWiJ9XX07CiAgICAgIHZhciBjb21tZW50c19wcmVmcz17ImNvbW1lbnRzX29ubHkiOiJmYWxzZSIsImNvbW1lbnRzX29yZGVyIjoib2xkZXN0In07CiAgICA8L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL2pxdWVyeS5qcyI+PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCIgc3JjPSIvY2hyb21lL2NvbW1vbi9qcy9iYWJlbC5qcyI+PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCIgc3JjPSIvY2hyb21lL2NvbW1vbi9qcy90cmFjLmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL3NlYXJjaC5qcyI+PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCIgc3JjPSIvY2hyb21lL2NvbW1vbi9qcy9mb2xkaW5nLmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL3dpa2l0b29sYmFyLmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL3Jlc2l6ZXIuanMiPjwvc2NyaXB0PgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgY2hhcnNldD0idXRmLTgiIHNyYz0iL2Nocm9tZS9jb21tb24vanMvYXV0b19wcmV2aWV3LmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL2pxdWVyeS11aS5qcyI+PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCIgc3JjPSIvY2hyb21lL2NvbW1vbi9qcy9qcXVlcnktdWktYWRkb25zLmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGNoYXJzZXQ9InV0Zi04IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL2pxdWVyeS11aS1pMThuLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgalF1ZXJ5KCIjdHJhYy1ub3NjcmlwdCIpLnJlbW92ZSgpOwogICAgICBqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCQpIHsKICAgICAgICAkKCIudHJhYy1hdXRvZm9jdXMiKS5mb2N1cygpOwogICAgICAgICQoIi50cmFjLXRhcmdldC1uZXciKS5hdHRyKCJ0YXJnZXQiLCAiX2JsYW5rIik7CiAgICAgICAgaWYgKCQudWkpIHsgLyogaXMganF1ZXJ5LXVpIGFkZGVkPyAqLwogICAgICAgICAgJCgiLnRyYWMtZGF0ZXBpY2tlcjpub3QoW3JlYWRvbmx5XSkiKS5kYXRlcGlja2VyKCk7CiAgICAgICAgICAkKCIudHJhYy1kYXRldGltZXBpY2tlcjpub3QoW3JlYWRvbmx5XSkiKS5kYXRldGltZXBpY2tlcigpOwogICAgICAgIH0KICAgICAgICAkKCIudHJhYy1kaXNhYmxlIikuZGlzYWJsZVN1Ym1pdCgiLnRyYWMtZGlzYWJsZS1kZXRlcm1pbmFudCIpOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7ICQoIi50cmFjLXNjcm9sbCIpLnNjcm9sbFRvVG9wKCkgfSwgMSk7CiAgICAgICAgJCgiLnRyYWMtZGlzYWJsZS1vbi1zdWJtaXQiKS5kaXNhYmxlT25TdWJtaXQoKTsKICAgICAgfSk7CiAgICA8L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9jaHJvbWUvY29tbW9uL2pzL3RocmVhZGVkX2NvbW1lbnRzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigkKSB7CiAgICAgICAgJCgiZGl2LmRlc2NyaXB0aW9uIikuZmluZCgiaDEsaDIsaDMsaDQsaDUsaDYiKS5hZGRBbmNob3IoXygiTGluayB0byB0aGlzIHNlY3Rpb24iKSk7CiAgICAgICAgJCgiLmZvbGRhYmxlIikuZW5hYmxlRm9sZGluZyhmYWxzZSwgdHJ1ZSk7CiAgICAgIC8qPCFbQ0RBVEFbKi8KICAgICAgICAkKCIjYXR0YWNobWVudHMiKS50b2dnbGVDbGFzcygiY29sbGFwc2VkIik7CiAgICAgICAgJCgiI3RyYWMtdXAtYXR0YWNobWVudHMiKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAkKCIjYXR0YWNobWVudHMiKS5yZW1vdmVDbGFzcygiY29sbGFwc2VkIik7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9KTsKICAgICAgICAkKCIjbW9kaWZ5IikucGFyZW50KCkudG9nZ2xlQ2xhc3MoImNvbGxhcHNlZCIpOwogICAgICAgICQoIi50cmFjLXRvcG5hdiBhIikuY2xpY2soZnVuY3Rpb24oKSB7ICQoIiNtb2RpZnkiKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygiY29sbGFwc2VkIik7IH0pOwogICAgICAgIGZ1bmN0aW9uIHNldFJldmVydEhhbmRsZXIoKSB7CiAgICAgICAgICAkKCJidXR0b24udHJhYy1yZXZlcnQiKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGRpdiA9ICQoImRpdiIsIHRoaXMpOwogICAgICAgICAgICB2YXIgZmllbGRfbmFtZSA9IGRpdlswXS5pZC5zdWJzdHIoNyk7CiAgICAgICAgICAgIHZhciBmaWVsZF92YWx1ZSA9IGRpdi50ZXh0KCk7CiAgICAgICAgICAgIHZhciBpbnB1dCA9ICQoIiNwcm9wZXJ0eWZvcm0gKltuYW1lPWZpZWxkXyIgKyBmaWVsZF9uYW1lICsgIl0iKTsKICAgICAgICAgICAgaWYgKGlucHV0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICBpZiAoaW5wdXQuZmlsdGVyKCJpbnB1dFt0eXBlPXJhZGlvXSIpLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIGlucHV0LnZhbChbZmllbGRfdmFsdWVdKTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlucHV0LmZpbHRlcigiaW5wdXRbdHlwZT1jaGVja2JveF0iKS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICBpbnB1dC52YWwoZmllbGRfdmFsdWUgPT0gIjEiID8gW2ZpZWxkX3ZhbHVlXSA6IFtdKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaW5wdXQudmFsKGZpZWxkX3ZhbHVlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7IC8vIFNwZWNpYWwgY2FzZSBmb3IgQ0MgY2hlY2tib3gKICAgICAgICAgICAgICBpbnB1dCA9ICQoIiNwcm9wZXJ0eWZvcm0gaW5wdXRbbmFtZT1jY191cGRhdGVdIikudmFsKFtdKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpbnB1dC5jaGFuZ2UoKTsKICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCJsaSIpLnJlbW92ZSgpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgc2V0UmV2ZXJ0SGFuZGxlcigpOwogICAgICAgIHZhciBjb21tZW50X2ZvY3VzZWQgPSBmYWxzZTsKICAgICAgICAkKCIjY29tbWVudCIpLmZvY3VzKGZ1bmN0aW9uKCkgeyBjb21tZW50X2ZvY3VzZWQgPSB0cnVlOyB9KQogICAgICAgICAgICAgICAgICAgICAuYmx1cihmdW5jdGlvbigpIHsgY29tbWVudF9mb2N1c2VkID0gZmFsc2U7IH0pOwogICAgICAgICQoIiNwcm9wZXJ0eWZvcm0iKS5hdXRvU3VibWl0KHtwcmV2aWV3OiAnMSd9LCBmdW5jdGlvbihkYXRhLCByZXBseSkgewogICAgICAgICAgdmFyIGl0ZW1zID0gJChyZXBseSk7CiAgICAgICAgICAvLyBVcGRhdGUgdGlja2V0IGJveAogICAgICAgICAgJCgiI3RpY2tldCIpLnJlcGxhY2VXaXRoKGl0ZW1zLmZpbHRlcignI3RpY2tldCcpKTsKICAgICAgICAgIC8vIFVudGhyZWFkLCB1bnJldmVydCBhbmQgdXBkYXRlIGNoYW5nZWxvZwogICAgICAgICAgaWYgKCEkKCcjdHJhYy1jb21tZW50cy1vbGRlc3QnKS5jaGVja2VkKCkpCiAgICAgICAgICAgICQoJyN0cmFjLWNvbW1lbnRzLW9sZGVzdCcpLmNsaWNrKCkuY2hhbmdlKCk7CiAgICAgICAgICAkKCIjY2hhbmdlbG9nIikucmVwbGFjZVdpdGgoaXRlbXMuZmlsdGVyKCIjY2hhbmdlbG9nIikpOwogICAgICAgICAgaWYgKCEkKCcjdHJhYy1zaG93LXByb3BlcnR5LWNoYW5nZXMtdG9nZ2xlJykuYXR0cignY2hlY2tlZCcpKQogICAgICAgICAgICAkKCcjdHJhYy1zaG93LXByb3BlcnR5LWNoYW5nZXMtdG9nZ2xlJykuY2xpY2soKS5hdHRyKCdjaGVja2VkJywgZmFsc2UpOwogICAgICAgICAgLy8gU2hvdyB3YXJuaW5nCiAgICAgICAgICB2YXIgbmV3X2NoYW5nZXMgPSAkKCIjY2hhbmdlbG9nIC50cmFjLW5ldyIpOwogICAgICAgICAgJCgiI3RyYWMtZWRpdC13YXJuaW5nIikudG9nZ2xlKG5ld19jaGFuZ2VzLmxlbmd0aCAhPSAwKTsKICAgICAgICAgIGlmIChuZXdfY2hhbmdlcy5sZW5ndGggIT0gMCkKICAgICAgICAgICAgJCgiI2NoYW5nZWxvZyIpLnBhcmVudCgpLnNob3coKS5yZW1vdmVDbGFzcygiY29sbGFwc2VkIik7CiAgICAgICAgICAvLyBVcGRhdGUgdmlldyB0aW1lCiAgICAgICAgICAkKCIjcHJvcGVydHlmb3JtIGlucHV0W25hbWU9J3ZpZXdfdGltZSddIikucmVwbGFjZVdpdGgoaXRlbXMuZmlsdGVyKCJpbnB1dFtuYW1lPSd2aWV3X3RpbWUnXSIpKTsKICAgICAgICAgIC8vIFVwZGF0ZSBwcmV2aWV3CiAgICAgICAgICB2YXIgcHJldmlldyA9ICQoIiN0aWNrZXRjaGFuZ2UiKS5odG1sKGl0ZW1zLmZpbHRlcignI3ByZXZpZXcnKS5jaGlsZHJlbigpKTsKICAgICAgICAgIHZhciBzaG93X3ByZXZpZXcgPSBwcmV2aWV3LmNoaWxkcmVuKCkubGVuZ3RoICE9IDA7CiAgICAgICAgICAkKCIjdGlja2V0Y2hhbmdlIikudG9nZ2xlKHNob3dfcHJldmlldyk7CiAgICAgICAgICBzZXRSZXZlcnRIYW5kbGVyKCk7CiAgICAgICAgICAvLyBFeGVjdXRlIHNjcmlwdHMgdG8gbG9hZCBzdHlsZXNoZWV0cwogICAgICAgICAgaXRlbXMuZmlsdGVyKCJzY3JpcHQiKS5hcHBlbmRUbygiaGVhZCIpOwogICAgICAgIH0sICIjdGlja2V0Y2hhbmdlIC50cmFjLWxvYWRpbmciKTsKICAgICAgICAkKCIjdHJhYy1jb21tZW50LWVkaXRvciIpLmF1dG9TdWJtaXQoe3ByZXZpZXdfY29tbWVudDogJzEnfSwgZnVuY3Rpb24oZGF0YSwgcmVwbHkpIHsKICAgICAgICAgIHZhciBjb21tZW50ID0gJCgiI3RyYWMtY29tbWVudC1lZGl0b3IiKS5uZXh0KCJkaXYuY29tbWVudCIpLmh0bWwocmVwbHkpOwogICAgICAgICAgY29tbWVudC50b2dnbGUoY29tbWVudC5jaGlsZHJlbigpLmxlbmd0aCAhPSAwKTsKICAgICAgICB9LCAiI2NoYW5nZWxvZyAudHJhYy1sb2FkaW5nIik7CiAgICAgICAgLypdXT4qLwogICAgICB9KTsKICAgIDwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLy93d3cuZWRnZXdhbGwub3JnL2Nzcy9wcm9qZWN0czAxMy5jc3MiIC8+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48IS0tCiAgICB3aW5kb3cuY29va2llY29uc2VudF9vcHRpb25zID0geyJtZXNzYWdlIjoiVGhpcyB3ZWJzaXRlIHVzZXMgY29va2llcyB0byBlbnN1cmUgeW91IGdldCB0aGUgYmVzdCBleHBlcmllbmNlIG9uIG91ciB3ZWJzaXRlIiwiZGlzbWlzcyI6IkdvdCBpdCEiLCJsZWFybk1vcmUiOiJNb3JlIGluZm8iLCJsaW5rIjpudWxsLCJ0aGVtZSI6ImRhcmstYm90dG9tIiwgImRvbWFpbiI6ICJlZGdld2FsbC5vcmcifTsKLy8tLT48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLy9zMy5hbWF6b25hd3MuY29tL2NjLnNpbGt0aWRlLmNvbS9jb29raWVjb25zZW50LmxhdGVzdC5taW4uanMiPjwvc2NyaXB0PgogIDwvaGVhZD4KICA8Ym9keT4KICAgIDxkaXYgaWQ9IndyYXBwZXIiPgogICAgICA8ZGl2IGlkPSJ0b3BiYXIiPgogICAgICAgIDxhIGlkPSJob21lLWxpbmsiIGhyZWY9Imh0dHA6Ly93d3cuZWRnZXdhbGwub3JnLyI+RWRnZXdhbGwgU29mdHdhcmU8L2E+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGlkPSJldy1oZWFkZXIiPgogICAgICAgIDxkaXYgaWQ9InRvcG5hdiI+PHVsPgogICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5lZGdld2FsbC5vcmcvIj5Ib21lPC9hPjwvbGk+CiAgICAgICAgIDxsaSBjbGFzcz0iYWN0aXZlIj4KICAgICAgICAgICA8YSBjbGFzcz0idHJhYyIgaHJlZj0iaHR0cDovL3RyYWMuZWRnZXdhbGwub3JnLyI+VHJhYzwvYT4KICAgICAgICAgPC9saT4KICAgICAgICAgPGxpPgogICAgICAgICAgIDxhIGNsYXNzPSJnZW5zaGkiIGhyZWY9Imh0dHA6Ly9nZW5zaGkuZWRnZXdhbGwub3JnLyI+R2Vuc2hpPC9hPgogICAgICAgICA8L2xpPgogICAgICAgICA8bGk+CiAgICAgICAgICAgPGEgY2xhc3M9ImJhYmVsIiBocmVmPSJodHRwOi8vYmFiZWwuZWRnZXdhbGwub3JnLyI+QmFiZWw8L2E+CiAgICAgICAgIDwvbGk+CiAgICAgICAgIDxsaT4KICAgICAgICAgICA8YSBjbGFzcz0iYml0dGVuIiBocmVmPSJodHRwOi8vYml0dGVuLmVkZ2V3YWxsLm9yZy8iPkJpdHRlbjwvYT4KICAgICAgICAgPC9saT48L3VsPgogICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgICAgPGRpdiBpZD0iZXctbWFpbiI+CiAgICAgICA8ZGl2IGlkPSJldy1jb250ZW50Ij4KICAgICAgICAgPGRpdj4KPHNjcmlwdCBzcmM9Ii8vd3d3Lmdvb2dsZS1hbmFseXRpY3MuY29tL3VyY2hpbi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPl91YWNjdCA9ICJVQS01OTgyNjUtMSI7dXJjaGluVHJhY2tlcigpOzwvc2NyaXB0Pgo8ZGl2IGlkPSJsZWZ0Ij4KICA8ZGl2IGNsYXNzPSJibG9jayI+PHVsPgogICAgPGxpPjxhIGhyZWY9Ii8iPkhvbWU8L2E+PC9saT48bGk+PGEgaHJlZj0iL3dpa2kvVHJhY0Rvd25sb2FkIj5Eb3dubG9hZDwvYT48L2xpPjxsaT48YSBocmVmPSIvd2lraS9UcmFjR3VpZGUiPkRvY3VtZW50YXRpb248L2E+PC9saT48bGk+PGEgaHJlZj0iL3dpa2kvTWFpbGluZ0xpc3QiPk1haWxpbmcgTGlzdHM8L2E+PC9saT48bGk+PGEgaHJlZj0iL3dpa2kvVHJhY0xpY2Vuc2UiPkxpY2Vuc2U8L2E+PC9saT48bGk+PGEgaHJlZj0iL3dpa2kvVHJhY0ZhcSI+RkFRPC9hPjwvbGk+CiAgPC91bD48L2Rpdj4KPC9kaXY+CjwvZGl2PgogICAgPGRpdiBpZD0iYmFubmVyIj4KICAgICAgPGRpdiBpZD0iaGVhZGVyIj4KICAgICAgICA8YSBpZD0ibG9nbyIgaHJlZj0iaHR0cDovL3RyYWMuZWRnZXdhbGwub3JnLyI+PGltZyBzcmM9Imh0dHA6Ly93d3cuZWRnZXdhbGwub3JnL2dmeC90cmFjX2xvZ28ucG5nIiBhbHQ9IlRyYWMiIGhlaWdodD0iNjEiIHdpZHRoPSIyMTQiIC8+PC9hPgogICAgICA8L2Rpdj4KICAgICAgPGZvcm0gaWQ9InNlYXJjaCIgYWN0aW9uPSIvc2VhcmNoIiBtZXRob2Q9ImdldCI+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9InByb2otc2VhcmNoIj5TZWFyY2g6PC9sYWJlbD4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0icHJvai1zZWFyY2giIG5hbWU9InEiIHNpemU9IjE4IiB2YWx1ZT0iIiAvPgogICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IlNlYXJjaCIgLz4KICAgICAgICA8L2Rpdj4KICAgICAgPC9mb3JtPgogICAgICA8ZGl2IGlkPSJtZXRhbmF2IiBjbGFzcz0ibmF2Ij4KICAgIDx1bD4KICAgICAgPGxpIGNsYXNzPSJmaXJzdCI+PGEgaHJlZj0iL2xvZ2luIj5Mb2dpbjwvYT48L2xpPjxsaT48YSBocmVmPSIvcHJlZnMiPlByZWZlcmVuY2VzPC9hPjwvbGk+PGxpPjxhIGhyZWY9Ii93aWtpL1RyYWNHdWlkZSI+SGVscC9HdWlkZTwvYT48L2xpPjxsaSBjbGFzcz0ibGFzdCI+PGEgaHJlZj0iL2Fib3V0Ij5BYm91dCBUcmFjPC9hPjwvbGk+CiAgICA8L3VsPgogIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGlkPSJtYWlubmF2IiBjbGFzcz0ibmF2Ij4KICAgIDx1bD4KICAgICAgPGxpIGNsYXNzPSJmaXJzdCI+PGEgaHJlZj0iL3dpa2kiPldpa2k8L2E+PC9saT48bGk+PGEgaHJlZj0iL3RpbWVsaW5lIj5UaW1lbGluZTwvYT48L2xpPjxsaT48YSBocmVmPSIvcm9hZG1hcCI+Um9hZG1hcDwvYT48L2xpPjxsaT48YSBocmVmPSIvYnJvd3NlciI+QnJvd3NlIFNvdXJjZTwvYT48L2xpPjxsaSBjbGFzcz0iYWN0aXZlIj48YSBocmVmPSIvcmVwb3J0Ij5WaWV3IFRpY2tldHM8L2E+PC9saT48bGk+PGEgaHJlZj0iL3dpa2kvTmV3VGlja2V0Ij5OZXcgVGlja2V0PC9hPjwvbGk+PGxpIGNsYXNzPSJsYXN0Ij48YSBocmVmPSIvc2VhcmNoIj5TZWFyY2g8L2E+PC9saT4KICAgIDwvdWw+CiAgPC9kaXY+CiAgICA8ZGl2IGlkPSJtYWluIj4KICAgICAgPGRpdiBpZD0iY3R4dG5hdiIgY2xhc3M9Im5hdiI+CiAgICAgICAgPGgyPkNvbnRleHQgTmF2aWdhdGlvbjwvaDI+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpIGNsYXNzPSJmaXJzdCI+PHNwYW4+JmxhcnI7IDxhIGNsYXNzPSJwcmV2IiBocmVmPSIvdGlja2V0LzEwNzU0IiB0aXRsZT0iVGlja2V0ICMxMDc1NCI+UHJldmlvdXMgVGlja2V0PC9hPjwvc3Bhbj48L2xpPjxsaSBjbGFzcz0ibGFzdCI+PHNwYW4+PGEgY2xhc3M9Im5leHQiIGhyZWY9Ii90aWNrZXQvMTA3NTYiIHRpdGxlPSJUaWNrZXQgIzEwNzU2Ij5OZXh0IFRpY2tldDwvYT4gJnJhcnI7PC9zcGFuPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgICA8aHIgLz4KICAgICAgPC9kaXY+CiAgICA8ZGl2IGlkPSJjb250ZW50IiBjbGFzcz0idGlja2V0Ij4KICAgICAgPGRpdiBjbGFzcz0idHJhYy10b3BuYXYiPgogICAgICAgIDxhIGhyZWY9IiNtb2RpZnkiIHRpdGxlPSJHbyB0byB0aGUgdGlja2V0IGVkaXRvciI+TW9kaWZ5PC9hPiDihpMKICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0idGlja2V0IiBjbGFzcz0idHJhYy1jb250ZW50ICI+CiAgPGRpdiBjbGFzcz0iZGF0ZSI+CiAgICA8cD5PcGVuZWQgPGEgY2xhc3M9InRpbWVsaW5lIiBocmVmPSIvdGltZWxpbmU/ZnJvbT0yMDEyLTA3LTAyVDIyJTNBMjclM0EwNyUyQjAyJTNBMDAmYW1wO3ByZWNpc2lvbj1zZWNvbmQiIHRpdGxlPSJTZWUgdGltZWxpbmUgYXQgSnVsIDIsIDIwMTIgMTA6Mjc6MDcgUE0iPjMgeWVhcnMgYWdvPC9hPjwvcD4KICAgIDxwPkxhc3QgbW9kaWZpZWQgPGEgY2xhc3M9InRpbWVsaW5lIiBocmVmPSIvdGltZWxpbmU/ZnJvbT0yMDE1LTAyLTAzVDE3JTNBMTIlM0E0MiUyQjAxJTNBMDAmYW1wO3ByZWNpc2lvbj1zZWNvbmQiIHRpdGxlPSJTZWUgdGltZWxpbmUgYXQgRmViIDMsIDIwMTUgNToxMjo0MiBQTSI+MTAgbW9udGhzIGFnbzwvYT48L3A+CiAgPC9kaXY+CiAgPGgyPgogICAgPGEgaHJlZj0iL3RpY2tldC8xMDc1NSIgY2xhc3M9InRyYWMtaWQiPiMxMDc1NTwvYT4KICAgIDxzcGFuIGNsYXNzPSJ0cmFjLXN0YXR1cyI+CiAgICAgIDxhIGhyZWY9Ii9xdWVyeT9zdGF0dXM9bmV3Ij5uZXc8L2E+CiAgICA8L3NwYW4+CiAgICA8c3BhbiBjbGFzcz0idHJhYy10eXBlIj4KICAgICAgPGEgaHJlZj0iL3F1ZXJ5P3N0YXR1cz0hY2xvc2VkJmFtcDt0eXBlPWVuaGFuY2VtZW50Ij5lbmhhbmNlbWVudDwvYT4KICAgIDwvc3Bhbj4KICA8L2gyPgogIDxoMSBpZD0idHJhYy10aWNrZXQtdGl0bGUiIGNsYXNzPSJzZWFyY2hhYmxlIj4KICAgIDxzcGFuIGNsYXNzPSJzdW1tYXJ5Ij5Db21taXRUaWNrZXRVcGRhdGVyIGRvZXMgbm90IGFsbG93IHVzZXIgdG8gZGVmaW5lIHdoYXQgc3RhdGUgdG8ganVtcCB0bzwvc3Bhbj4KICA8L2gxPgogIDx0YWJsZSBjbGFzcz0icHJvcGVydGllcyI+CiAgICA8dHI+CiAgICAgIDx0aCBpZD0iaF9yZXBvcnRlciI+UmVwb3J0ZWQgYnk6PC90aD4KICAgICAgPHRkIGhlYWRlcnM9ImhfcmVwb3J0ZXIiIGNsYXNzPSJzZWFyY2hhYmxlIj48YSBocmVmPSIvcXVlcnk/c3RhdHVzPSFjbG9zZWQmYW1wO3JlcG9ydGVyPXBhdHJpY2subGl0dGxlIj5wYXRyaWNrLmxpdHRsZTwvYT48L3RkPgogICAgICA8dGggaWQ9Imhfb3duZXIiIGNsYXNzPSJtaXNzaW5nIj5Pd25lZCBieTo8L3RoPgogICAgICA8dGQgaGVhZGVycz0iaF9vd25lciI+PC90ZD4KICAgIDwvdHI+CiAgICA8dHI+CiAgICAgICAgPHRoIGlkPSJoX3ByaW9yaXR5Ij4KICAgICAgICAgIFByaW9yaXR5OgogICAgICAgIDwvdGg+CiAgICAgICAgPHRkIGhlYWRlcnM9ImhfcHJpb3JpdHkiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9xdWVyeT9zdGF0dXM9IWNsb3NlZCZhbXA7cHJpb3JpdHk9bm9ybWFsIj5ub3JtYWw8L2E+CiAgICAgICAgPC90ZD4KICAgICAgICA8dGggaWQ9ImhfbWlsZXN0b25lIj4KICAgICAgICAgIE1pbGVzdG9uZToKICAgICAgICA8L3RoPgogICAgICAgIDx0ZCBoZWFkZXJzPSJoX21pbGVzdG9uZSI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9Im1pbGVzdG9uZSIgaHJlZj0iL21pbGVzdG9uZS9uZXh0LW1ham9yLXJlbGVhc2VzIiB0aXRsZT0iTm8gZGF0ZSBzZXQiPm5leHQtbWFqb3ItcmVsZWFzZXM8L2E+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PHRyPgogICAgICAgIDx0aCBpZD0iaF9jb21wb25lbnQiPgogICAgICAgICAgQ29tcG9uZW50OgogICAgICAgIDwvdGg+CiAgICAgICAgPHRkIGhlYWRlcnM9ImhfY29tcG9uZW50Ij4KICAgICAgICAgICAgICA8YSBocmVmPSIvcXVlcnk/c3RhdHVzPSFjbG9zZWQmYW1wO2NvbXBvbmVudD10aWNrZXQrc3lzdGVtIj50aWNrZXQgc3lzdGVtPC9hPgogICAgICAgIDwvdGQ+CiAgICAgICAgPHRoIGlkPSJoX3ZlcnNpb24iPgogICAgICAgICAgVmVyc2lvbjoKICAgICAgICA8L3RoPgogICAgICAgIDx0ZCBoZWFkZXJzPSJoX3ZlcnNpb24iPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9xdWVyeT9zdGF0dXM9IWNsb3NlZCZhbXA7dmVyc2lvbj0wLjEyLjMiPjAuMTIuMzwvYT4KICAgICAgICA8L3RkPgogICAgPC90cj48dHI+CiAgICAgICAgPHRoIGlkPSJoX3NldmVyaXR5Ij4KICAgICAgICAgIFNldmVyaXR5OgogICAgICAgIDwvdGg+CiAgICAgICAgPHRkIGhlYWRlcnM9Imhfc2V2ZXJpdHkiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9xdWVyeT9zdGF0dXM9IWNsb3NlZCZhbXA7c2V2ZXJpdHk9bm9ybWFsIj5ub3JtYWw8L2E+CiAgICAgICAgPC90ZD4KICAgICAgICA8dGggaWQ9Imhfa2V5d29yZHMiPgogICAgICAgICAgS2V5d29yZHM6CiAgICAgICAgPC90aD4KICAgICAgICA8dGQgaGVhZGVycz0iaF9rZXl3b3JkcyIgY2xhc3M9InNlYXJjaGFibGUiPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9xdWVyeT9zdGF0dXM9IWNsb3NlZCZhbXA7a2V5d29yZHM9fkNvbW1pdFRpY2tldFVwZGF0ZXIiPkNvbW1pdFRpY2tldFVwZGF0ZXI8L2E+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PHRyPgogICAgICAgIDx0aCBpZD0iaF9jYyI+CiAgICAgICAgICBDYzoKICAgICAgICA8L3RoPgogICAgICAgIDx0ZCBoZWFkZXJzPSJoX2NjIiBjbGFzcz0ic2VhcmNoYWJsZSI+CiAgICAgICAgICAgICAgZXRoYW4uanVjb3Z5QOKApiwgc3RlcmtyaWdA4oCmLCBza3JhdHRhcmVuQOKApgogICAgICAgIDwvdGQ+CiAgICAgICAgPHRoIGNsYXNzPSJtaXNzaW5nIj4KICAgICAgICA8L3RoPgogICAgICAgIDx0ZD4KICAgICAgICA8L3RkPgogICAgPC90cj48dHI+CiAgICAgICAgPHRoIGlkPSJoX2NoYW5nZWxvZyIgY2xhc3M9Im1pc3NpbmciPgogICAgICAgICAgUmVsZWFzZSBOb3RlczoKICAgICAgICA8L3RoPgogICAgICAgIDx0ZCBoZWFkZXJzPSJoX2NoYW5nZWxvZyIgY29sc3Bhbj0iMyI+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+PHRyPgogICAgICAgIDx0aCBpZD0iaF9hcGljaGFuZ2VzIiBjbGFzcz0ibWlzc2luZyI+CiAgICAgICAgICBBUEkgQ2hhbmdlczoKICAgICAgICA8L3RoPgogICAgICAgIDx0ZCBoZWFkZXJzPSJoX2FwaWNoYW5nZXMiIGNvbHNwYW49IjMiPgogICAgICAgIDwvdGQ+CiAgICA8L3RyPgogIDwvdGFibGU+CiAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPgogICAgPGgzIGlkPSJjb21tZW50OmRlc2NyaXB0aW9uIj4KICAgICAgRGVzY3JpcHRpb24KICAgIDwvaDM+CiAgICA8Zm9ybSBpZD0iYWRkcmVwbHkiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9ImRlc2NyaXB0aW9uIiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InJlcGx5IiB2YWx1ZT0i4oazIFJlcGx5IiB0aXRsZT0iUmVwbHksIHF1b3RpbmcgdGhpcyBkZXNjcmlwdGlvbiIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgICA8ZGl2IGNsYXNzPSJzZWFyY2hhYmxlIj4KICAgICAgPHA+ClRoZSA8YSBjbGFzcz0id2lraSIgaHJlZj0iL3dpa2kvQ29tbWl0VGlja2V0VXBkYXRlciI+Q29tbWl0VGlja2V0VXBkYXRlcjwvYT4gd2lsbCBvbmx5IGV2ZXIgY2xvc2UgYSB0aWNrZXQuIEluIGdlbmVyYWwsIHRoZSBjbG9zZWQgc3RhdGUgaXMgZm9yIHdoZW4gbm8gbW9yZSB3b3JrIGlzIHRvIGJlIGRvbmUsIGFrYSA8ZW0+YWZ0ZXI8L2VtPiBRQSBoYXMgdmVyaWZpZWQgdGhlIGZpeC4gVHJhYyBzaG91bGQgYWxsb3cgY29uZmlndXJhdGlvbiBvZiB3aGF0IHN0YXRlIG5hbWUgdGhlIHRpY2tldCB3aWxsIGdldCB1cGRhdGVkIHRvLgo8L3A+CgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgogICAgICAgICAgCiAgICA8ZGl2IGlkPSJhdHRhY2htZW50cyI+CiAgICAgICAgPGgzIGNsYXNzPSJmb2xkYWJsZSI+QXR0YWNobWVudHMgPHNwYW4gY2xhc3M9InRyYWMtY291bnQiPigwKTwvc3Bhbj48L2gzPgogICAgICAgIDxkaXYgY2xhc3M9ImF0dGFjaG1lbnRzIj4KICAgICAgICAgIDxmb3JtIG1ldGhvZD0iZ2V0IiBhY3Rpb249Ii9hdHRhY2htZW50L3RpY2tldC8xMDc1NS8iIGlkPSJhdHRhY2hmaWxlIj4KICA8ZGl2PgogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0ibmV3IiAvPgogICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgaWQ9ImF0dGFjaGZpbGVidXR0b24iIHZhbHVlPSJBdHRhY2ggZmlsZSIgLz4KICA8L2Rpdj4KPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgIDxkaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmUiPgogICAgICAgICAgICA8Zm9ybSBpZD0icHJlZnMiIG1ldGhvZD0iZ2V0IiBhY3Rpb249Ii9wcmVmcyIgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgcmlnaHQ6IDAiPgogICAgICAgICAgICAgIDxkaXYgaWQ9InRyYWMtY29tbWVudHMtb3JkZXIiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0idHJhYy1jb21tZW50cy1vbGRlc3QiIG5hbWU9InRyYWMtY29tbWVudHMtb3JkZXIiIHZhbHVlPSJvbGRlc3QiIGNoZWNrZWQ9ImNoZWNrZWQiIC8+CiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ0cmFjLWNvbW1lbnRzLW9sZGVzdCI+T2xkZXN0IGZpcnN0PC9sYWJlbD4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9InRyYWMtY29tbWVudHMtbmV3ZXN0IiBuYW1lPSJ0cmFjLWNvbW1lbnRzLW9yZGVyIiB2YWx1ZT0ibmV3ZXN0IiAvPgogICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0idHJhYy1jb21tZW50cy1uZXdlc3QiPk5ld2VzdCBmaXJzdDwvbGFiZWw+CiAgICAgICAgICAgICAgICA8c3BhbiBpZD0idHJhYy10aHJlYWRlZC10b2dnbGUiIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0idHJhYy1jb21tZW50cy10aHJlYWRlZCIgbmFtZT0idHJhYy1jb21tZW50cy1vcmRlciIgdmFsdWU9InRocmVhZGVkIiAvPgogICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ0cmFjLWNvbW1lbnRzLXRocmVhZGVkIj5UaHJlYWRlZDwvbGFiZWw+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0idHJhYy1zaG93LXByb3BlcnR5LWNoYW5nZXMtdG9nZ2xlIiB0eXBlPSJjaGVja2JveCIgLz4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InRyYWMtc2hvdy1wcm9wZXJ0eS1jaGFuZ2VzLXRvZ2dsZSI+U2hvdyBwcm9wZXJ0eSBjaGFuZ2VzPC9sYWJlbD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8aDMgY2xhc3M9ImZvbGRhYmxlIj5DaGFuZ2UgSGlzdG9yeSA8c3BhbiBjbGFzcz0idHJhYy1jb3VudCI+KDE4KTwvc3Bhbj48L2gzPgogICAgICAgICAgPGRpdiBpZD0iY2hhbmdlbG9nIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS0xLTEzNDEyNjM2MDcyMzkwNDYiPgogICAgICAgICAgICAgICAgCiAgPGgzIGNsYXNzPSJjaGFuZ2UiIGlkPSJjb21tZW50OjEiPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjEiPmNvbW1lbnQ6MTwvYT4KICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgICAgICAgQ2hhbmdlZCA8YSBjbGFzcz0idGltZWxpbmUiIGhyZWY9Ii90aW1lbGluZT9mcm9tPTIwMTItMDctMDJUMjMlM0ExMyUzQTI3JTJCMDIlM0EwMCZhbXA7cHJlY2lzaW9uPXNlY29uZCIgdGl0bGU9IlNlZSB0aW1lbGluZSBhdCBKdWwgMiwgMjAxMiAxMToxMzoyNyBQTSI+MyB5ZWFycyBhZ288L2E+IGJ5IDxzcGFuIGNsYXNzPSJ0cmFjLWF1dGhvci1hbm9ueW1vdXMiPmFub255bW91czwvc3Bhbj4KICA8L2gzPgogIDxkaXYgY2xhc3M9InRyYWMtdGlja2V0LWJ1dHRvbnMiPgogICAgPGZvcm0gaWQ9InJlcGx5LXRvLWNvbW1lbnQtMSIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iI2NvbW1lbnQiPgogICAgICA8ZGl2IGNsYXNzPSJpbmxpbmVidXR0b25zIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBseXRvIiB2YWx1ZT0iMSIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0i4oazIFJlcGx5IiB0aXRsZT0iUmVwbHkgdG8gY29tbWVudCAxIiAvPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQgc2VhcmNoYWJsZSI+CiAgICAgIDxwPgpZZXMsIHRoaXMgd291bGQgYmUgYSBuaWNlIGZlYXR1cmUuIEkndmUgd2FudGVkIHRvIGJlIGFibGUgdG8gZGVmaW5lIDxlbT5yZW9wZW5zPC9lbT4gYXMgYSBrZXl3b3JkIHRoYXQgY2hhbmdlcyB0aGUgc3RhdGUgb2YgdGhlIHRpY2tldCB0byA8ZW0+cmVvcGVuZWQ8L2VtPiwgYXMgd2VsbCBhcyB0cmFuc2l0aW9uIHRpY2tldHMgdGhhdCBhcmUgPGVtPmZpeGVkPC9lbT4gZnJvbSA8ZW0+YWNjZXB0ZWQ8L2VtPiAmcmFycjsgPGVtPmltcGxlbWVudGVkPC9lbT4sIHJhdGhlciB0aGFuIGZyb20gPGVtPmFjY2VwdGVkPC9lbT4gdG8gPGVtPmNsb3NlZDwvZW0+Lgo8L3A+CgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTItMTM0MTI2MzY3MTM0NTk1NyI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6MiI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6MiI+Y29tbWVudDoyPC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMi0wNy0wMlQyMyUzQTE0JTNBMzElMkIwMiUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEp1bCAyLCAyMDEyIDExOjE0OjMxIFBNIj4zIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5SeWFuIEogT2xsb3MgJmx0O3J5YW5vQOKApiZndDs8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTIiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjIiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgMiIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgPHVsIGNsYXNzPSJjaGFuZ2VzIj4KICAgIDxsaSBjbGFzcz0idHJhYy1maWVsZC1jYyI+CiAgICAgIDxzdHJvbmcgY2xhc3M9InRyYWMtZmllbGQtY2MiPkNjPC9zdHJvbmc+CiAgICAgICAgPGVtPnJ5YW5vQOKApjwvZW0+IGFkZGVkCiAgICA8L2xpPgogIDwvdWw+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTMtMTM1NDI4NDUwNDA1MDQzNiI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6MyI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6MyI+Y29tbWVudDozPC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMi0xMS0zMFQxNSUzQTA4JTNBMjQlMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IE5vdiAzMCwgMjAxMiAzOjA4OjI0IFBNIj4zIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5jbGVtZW5zQOKApjwvc3Bhbj4KICA8L2gzPgogIDxkaXYgY2xhc3M9InRyYWMtdGlja2V0LWJ1dHRvbnMiPgogICAgPGZvcm0gaWQ9InJlcGx5LXRvLWNvbW1lbnQtMyIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iI2NvbW1lbnQiPgogICAgICA8ZGl2IGNsYXNzPSJpbmxpbmVidXR0b25zIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBseXRvIiB2YWx1ZT0iMyIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0i4oazIFJlcGx5IiB0aXRsZT0iUmVwbHkgdG8gY29tbWVudCAzIiAvPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQgc2VhcmNoYWJsZSI+CiAgICAgIDxwPgpUaGlzIHdvdWxkIGJlIGNvb2whCjwvcD4KPHA+CkluIGFkZGl0aW9uLCBpdCB3b3VsZCBiZSBncmVhdCBpZiB0aGUgPGEgY2xhc3M9Indpa2kiIGhyZWY9Ii93aWtpL0NvbW1pdFRpY2tldFVwZGF0ZXIiPkNvbW1pdFRpY2tldFVwZGF0ZXI8L2E+IHdvdWxkIHVzZSB0aGUgPGNvZGU+ZGVmYXVsdF9yZXNvbHV0aW9uPC9jb2RlPiBjb25maWd1cmVkIGluIHRoZSA8Y29kZT5bdGlja2V0XTwvY29kZT4gc2VjdGlvbiBvZiA8Y29kZT50cmFjLmluaTwvY29kZT4gaWYgbm8gb3RoZXIgc3RhdGUgaGFzIGJlZW4gc3BlY2lmaWVkLiAgQ3VycmVudGx5LCBpdCBzZXRzIHRoZSBzdGF0ZSB0byA8Y29kZT5maXhlZDwvY29kZT4gKGhhcmQtY29kZWQgaW4gPGNvZGU+Y29tbWl0X3VwZGF0ZXIucHk8L2NvZGU+LCBsaW5lIDI1MSksIGFsdGhvdWdoIG15IGN1c3RvbSB3b3JrZmxvdyBoYXMgbm8gPGNvZGU+Zml4ZWQ8L2NvZGU+IHN0YXRlLgo8L3A+CgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTQtMTM1NDQ5NjY3MDA2OTM1NiI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6NCI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6NCI+Y29tbWVudDo0PC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMi0xMi0wM1QwMiUzQTA0JTNBMzAlMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IERlYyAzLCAyMDEyIDI6MDQ6MzAgQU0iPjMgeWVhcnMgYWdvPC9hPiBieSA8c3BhbiBjbGFzcz0idHJhYy1hdXRob3IiPmV0aGFuLmp1Y292eUDigKY8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTQiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjQiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgNCIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgPHVsIGNsYXNzPSJjaGFuZ2VzIj4KICAgIDxsaSBjbGFzcz0idHJhYy1maWVsZC1jYyI+CiAgICAgIDxzdHJvbmcgY2xhc3M9InRyYWMtZmllbGQtY2MiPkNjPC9zdHJvbmc+CiAgICAgICAgPGVtPmV0aGFuLmp1Y292eUDigKY8L2VtPiBhZGRlZAogICAgPC9saT4KICA8L3VsPgoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS01LTEzNTc3MjM4MjA0MTc3MTciPgogICAgICAgICAgICAgICAgCiAgPGgzIGNsYXNzPSJjaGFuZ2UiIGlkPSJjb21tZW50OjUiPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjUiPmNvbW1lbnQ6NTwvYT4KICA8L3NwYW4+CiAgICAgICAgICA8c3Bhbj5mb2xsb3ctdXBzOjwvc3Bhbj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjYiIGNsYXNzPSJmb2xsb3ctdXAiPuKGk8KgNjwvYT4KICAgIDxhIGhyZWY9IiNjb21tZW50OjgiIGNsYXNzPSJmb2xsb3ctdXAiPuKGk8KgODwvYT4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0wMS0wOVQxMCUzQTMwJTNBMjAlMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEphbiA5LCAyMDEzIDEwOjMwOjIwIEFNIj4zIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5QYXVsIFdpc2UgJmx0O3BhYnMzQOKApiZndDs8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTUiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjUiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgNSIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21tZW50IHNlYXJjaGFibGUiPgogICAgICA8cD4KRm9yIHRob3NlIHdobyBhcmUgbG9va2luZyBmb3IgYSB3b3JrYXJvdW5kIGZvciB0aGlzIGxhY2sgb2YgZmVhdHVyZSwgSSBhZGRlZCBhIHNpbXBsZSBwbHVnaW4gdG8gZG8gd2hhdCBJIHdhbnRlZDoKPC9wPgo8cHJlIGNsYXNzPSJ3aWtpIj5mcm9tIHRyYWNvcHQudGlja2V0LmNvbW1pdF91cGRhdGVyIGltcG9ydCBDb21taXRUaWNrZXRVcGRhdGVyCgpjbGFzcyBDdXN0b21Db21taXRUaWNrZXRVcGRhdGVyKENvbW1pdFRpY2tldFVwZGF0ZXIpOgoKCWRlZiBjbWRfY2xvc2Uoc2VsZiwgdGlja2V0LCBjaGFuZ2VzZXQsIHBlcm0pOgoJCWlmIG5vdCBzZWxmLmNoZWNrX3Blcm1zIG9yICdUSUNLRVRfTU9ESUZZJyBpbiBwZXJtOgoJCQl0aWNrZXRbJ3N0YXR1cyddID0gJ3Jldmlld2luZycKCQkJdGlja2V0Wydvd25lciddID0gdGlja2V0WydyZXBvcnRlciddCjwvcHJlPgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTYtMTM1NzgyNjc3MzgxMjQxNSI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6NiI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6NiI+Y29tbWVudDo2PC9hPgogIDwvc3Bhbj4KICAgICAgICBpbiByZXBseSB0bzoKICAgIDxhIGhyZWY9IiNjb21tZW50OjUiPuKGkcKgNTwvYT4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0wMS0xMFQxNSUzQTA2JTNBMTMlMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEphbiAxMCwgMjAxMyAzOjA2OjEzIFBNIj4zIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5wYXRyaWNrLmxpdHRsZUDigKY8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTYiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjYiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgNiIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21tZW50IHNlYXJjaGFibGUiPgogICAgICA8cD4KUmVwbHlpbmcgdG8gPGEgY2xhc3M9InRpY2tldCIgaHJlZj0iL3RpY2tldC8xMDc1NSNjb21tZW50OjUiIHRpdGxlPSJDb21tZW50IDUiPlBhdWwgV2lzZSAmbHQ7cGFiczNA4oCmJmd0OzwvYT46CjwvcD4KPGJsb2NrcXVvdGUgY2xhc3M9ImNpdGF0aW9uIj4KPHA+CkZvciB0aG9zZSB3aG8gYXJlIGxvb2tpbmcgZm9yIGEgd29ya2Fyb3VuZCBmb3IgdGhpcyBsYWNrIG9mIGZlYXR1cmUsIEkgYWRkZWQgYSBzaW1wbGUgcGx1Z2luIHRvIGRvIHdoYXQgSSB3YW50ZWQ6CjwvcD4KPHByZSBjbGFzcz0id2lraSI+ZnJvbSB0cmFjb3B0LnRpY2tldC5jb21taXRfdXBkYXRlciBpbXBvcnQgQ29tbWl0VGlja2V0VXBkYXRlcgoKY2xhc3MgQ3VzdG9tQ29tbWl0VGlja2V0VXBkYXRlcihDb21taXRUaWNrZXRVcGRhdGVyKToKCglkZWYgY21kX2Nsb3NlKHNlbGYsIHRpY2tldCwgY2hhbmdlc2V0LCBwZXJtKToKCQlpZiBub3Qgc2VsZi5jaGVja19wZXJtcyBvciAnVElDS0VUX01PRElGWScgaW4gcGVybToKCQkJdGlja2V0WydzdGF0dXMnXSA9ICdyZXZpZXdpbmcnCgkJCXRpY2tldFsnb3duZXInXSA9IHRpY2tldFsncmVwb3J0ZXInXQo8L3ByZT48L2Jsb2NrcXVvdGU+CjxwPgpJJ3ZlIHRyaWVkIGZvbGxvd2luZyB0aGUgdmFyaW91cyB0dXRvcmlhbHMgYW5kIEkganVzdCBjYW4ndCBnZXQgdGhlIHBsdWdpbiB0byBzaG93IHVwIGluIG15IGFkbWluIHBhbmVsLiBJIGNhbiBmb2xsb3cgdGhlIHQtaC5vIGVnZyBjb29raW5nIHR1dG9yaWFsIGFuZCBnZXQgdGhlIGhlbGxvd29ybGQgZXhhbXBsZSB0byBzaG93IHVwLCBidXQgd2hlbiBJIHN3aXRjaCBvdmVyIHRvIHRoaXMgY29kZSBub3RoaW5nIHNob3dzIHVwLgo8L3A+CgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTctMTM1OTk5MjE2MzQzNzA1NSI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6NyI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6NyI+Y29tbWVudDo3PC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0wMi0wNFQxNiUzQTM2JTNBMDMlMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEZlYiA0LCAyMDEzIDQ6MzY6MDMgUE0iPjMgeWVhcnMgYWdvPC9hPiBieSA8c3BhbiBjbGFzcz0idHJhYy1hdXRob3IiPkNocmlzdGlhbiBCb29zPC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgICA8Zm9ybSBpZD0icmVwbHktdG8tY29tbWVudC03IiBtZXRob2Q9ImdldCIgYWN0aW9uPSIjY29tbWVudCI+CiAgICAgIDxkaXYgY2xhc3M9ImlubGluZWJ1dHRvbnMiPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcGx5dG8iIHZhbHVlPSI3IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSLihrMgUmVwbHkiIHRpdGxlPSJSZXBseSB0byBjb21tZW50IDciIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iY2hhbmdlcyI+CiAgICA8bGkgY2xhc3M9InRyYWMtZmllbGQtbWlsZXN0b25lIj4KICAgICAgPHN0cm9uZyBjbGFzcz0idHJhYy1maWVsZC1taWxlc3RvbmUiPk1pbGVzdG9uZTwvc3Ryb25nPgogICAgICAgIHNldCB0byA8ZW0+dW5zY2hlZHVsZWQ8L2VtPgogICAgPC9saT4KICA8L3VsPgogICAgPGRpdiBjbGFzcz0iY29tbWVudCBzZWFyY2hhYmxlIj4KICAgICAgPHA+CkEgZmV3IGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIGNvbW1pdCB0aWNrZXQgdXBkYXRlciBjb3VsZCBpbmRlZWQgaGVscC4KPC9wPgo8cD4KPGEgY2xhc3M9Indpa2kiIGhyZWY9Ii93aWtpL1BhdGNoV2VsY29tZSI+UGF0Y2hXZWxjb21lPC9hPi4KPC9wPgoKICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS04LTEzNzIzMzU0NjMxMTA5NTUiPgogICAgICAgICAgICAgICAgCiAgPGgzIGNsYXNzPSJjaGFuZ2UiIGlkPSJjb21tZW50OjgiPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjgiPmNvbW1lbnQ6ODwvYT4KICA8L3NwYW4+CiAgICAgICAgaW4gcmVwbHkgdG86CiAgICA8YSBocmVmPSIjY29tbWVudDo1Ij7ihpHCoDU8L2E+CiAgICA8L3NwYW4+CiAgICAgICAgQ2hhbmdlZCA8YSBjbGFzcz0idGltZWxpbmUiIGhyZWY9Ii90aW1lbGluZT9mcm9tPTIwMTMtMDYtMjdUMTQlM0ExNyUzQTQzJTJCMDIlM0EwMCZhbXA7cHJlY2lzaW9uPXNlY29uZCIgdGl0bGU9IlNlZSB0aW1lbGluZSBhdCBKdW4gMjcsIDIwMTMgMjoxNzo0MyBQTSI+MiB5ZWFycyBhZ288L2E+IGJ5IDxzcGFuIGNsYXNzPSJ0cmFjLWF1dGhvciI+YnJhZEDigKY8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTgiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjgiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgOCIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21tZW50IHNlYXJjaGFibGUiPgogICAgICA8cD4KSSBmaW5kIHRoYXQgdGhlIHNpbXBsZSBwbHVnaW4gYXBwcm9hY2ggd29ya3MgYnV0IHRoZXJlJ3Mgc29tZXRoaW5nIG9kZCBnb2luZyBvbiBhcyB0aGUgdGlja2V0IGdvZXMgdG8gJ2Nsb3NlZCcgZmlyc3QgYW5kIHRoZW4gdGhlIGN1c3RvbSB1cGRhdGVyIG1vdmVzIGl0IHRvICdyZXZpZXdpbmcnIChvciAndGVzdCcgb3Igd2hhdGV2ZXIpLCByZXN1bHRpbmcgaW4gdHdvIGVudHJpZXMgaW4gdGhlIHRpY2tldCdzIGhpc3RvcnkuIEl0J3MgbGlrZSB0aGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBpcyBiZWluZyBjYWxsZWQgYW5kIHRoZSBzaW1wbGUgcGx1Z2luIGlzIG5vdCBvdmVycmlkaW5nIHRoYXQgYmVoYXZpb3VyLiBBbSBJIG1pc3Npbmcgc29tZXRoaW5nIHNpbXBsZSBoZXJlPwo8L3A+CgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTktMTM3MjM1NjcyOTU5Njg3MSI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6OSI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6OSI+Y29tbWVudDo5PC9hPgogIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuPmZvbGxvdy11cDo8L3NwYW4+CiAgICA8YSBocmVmPSIjY29tbWVudDoxMCIgY2xhc3M9ImZvbGxvdy11cCI+4oaTwqAxMDwvYT4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0wNi0yN1QyMCUzQTEyJTNBMDklMkIwMiUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEp1biAyNywgMjAxMyA4OjEyOjA5IFBNIj4yIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5SZW15IEJsYW5rPC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgICA8Zm9ybSBpZD0icmVwbHktdG8tY29tbWVudC05IiBtZXRob2Q9ImdldCIgYWN0aW9uPSIjY29tbWVudCI+CiAgICAgIDxkaXYgY2xhc3M9ImlubGluZWJ1dHRvbnMiPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcGx5dG8iIHZhbHVlPSI5IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSLihrMgUmVwbHkiIHRpdGxlPSJSZXBseSB0byBjb21tZW50IDkiIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tbWVudCBzZWFyY2hhYmxlIj4KICAgICAgPHA+CklmIHlvdXIgcGx1Z2luIHN1YmNsYXNzZXMgPGNvZGU+Q29tbWl0VGlja2V0VXBkYXRlcjwvY29kZT4sIHlvdSBuZWVkIHRvIGRpc2FibGUgdGhlIGJhc2UgY29tcG9uZW50ICg8Y29kZT50cmFjb3B0LnRpY2tldC5jb21taXRfdXBkYXRlci5Db21taXRUaWNrZXRVcGRhdGVyPC9jb2RlPikgaW4gPGNvZGU+dHJhYy5pbmk8L2NvZGU+Lgo8L3A+CgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5nZSIgaWQ9InRyYWMtY2hhbmdlLTEwLTEzNzI2NjIxMzYzNjIwNTgiPgogICAgICAgICAgICAgICAgCiAgPGgzIGNsYXNzPSJjaGFuZ2UiIGlkPSJjb21tZW50OjEwIj4KICAgIDxzcGFuIGNsYXNzPSJ0aHJlYWRpbmciPgogICAgICA8c3BhbiBjbGFzcz0iY251bSI+CiAgICA8YSBocmVmPSIjY29tbWVudDoxMCI+Y29tbWVudDoxMDwvYT4KICA8L3NwYW4+CiAgICAgICAgaW4gcmVwbHkgdG86CiAgICA8YSBocmVmPSIjY29tbWVudDo5Ij7ihpHCoDk8L2E+CiAgICA8L3NwYW4+CiAgICAgICAgQ2hhbmdlZCA8YSBjbGFzcz0idGltZWxpbmUiIGhyZWY9Ii90aW1lbGluZT9mcm9tPTIwMTMtMDctMDFUMDklM0EwMiUzQTE2JTJCMDIlM0EwMCZhbXA7cHJlY2lzaW9uPXNlY29uZCIgdGl0bGU9IlNlZSB0aW1lbGluZSBhdCBKdWwgMSwgMjAxMyA5OjAyOjE2IEFNIj4yIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yLWFub255bW91cyI+YW5vbnltb3VzPC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgICA8Zm9ybSBpZD0icmVwbHktdG8tY29tbWVudC0xMCIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iI2NvbW1lbnQiPgogICAgICA8ZGl2IGNsYXNzPSJpbmxpbmVidXR0b25zIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBseXRvIiB2YWx1ZT0iMTAiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgMTAiIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tbWVudCBzZWFyY2hhYmxlIj4KICAgICAgPHA+ClJlcGx5aW5nIHRvIDxhIGNsYXNzPSJ0aWNrZXQiIGhyZWY9Ii90aWNrZXQvMTA3NTUjY29tbWVudDo5IiB0aXRsZT0iQ29tbWVudCA5Ij5yYmxhbms8L2E+Ogo8L3A+CjxibG9ja3F1b3RlIGNsYXNzPSJjaXRhdGlvbiI+CjxwPgpJZiB5b3VyIHBsdWdpbiBzdWJjbGFzc2VzIDxjb2RlPkNvbW1pdFRpY2tldFVwZGF0ZXI8L2NvZGU+LCB5b3UgbmVlZCB0byBkaXNhYmxlIHRoZSBiYXNlIGNvbXBvbmVudCAoPGNvZGU+dHJhY29wdC50aWNrZXQuY29tbWl0X3VwZGF0ZXIuQ29tbWl0VGlja2V0VXBkYXRlcjwvY29kZT4pIGluIDxjb2RlPnRyYWMuaW5pPC9jb2RlPi4KPC9wPgo8L2Jsb2NrcXVvdGU+CjxwPgpUaGF0IHdvcmtzIHBlcmZlY3RseS4gTWFueSB0aGFua3MuCjwvcD4KCiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbmdlIiBpZD0idHJhYy1jaGFuZ2UtMTEtMTM3NTk1NTI1OTQxNzQwMCI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6MTEiPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjExIj5jb21tZW50OjExPC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0wOC0wOFQxMSUzQTQ3JTNBMzklMkIwMiUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEF1ZyA4LCAyMDEzIDExOjQ3OjM5IEFNIj4yIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5SeWFuIEogT2xsb3M8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTExIiBtZXRob2Q9ImdldCIgYWN0aW9uPSIjY29tbWVudCI+CiAgICAgIDxkaXYgY2xhc3M9ImlubGluZWJ1dHRvbnMiPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcGx5dG8iIHZhbHVlPSIxMSIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0i4oazIFJlcGx5IiB0aXRsZT0iUmVwbHkgdG8gY29tbWVudCAxMSIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgPHVsIGNsYXNzPSJjaGFuZ2VzIj4KICAgIDxsaSBjbGFzcz0idHJhYy1maWVsZC1jYyI+CiAgICAgIDxzdHJvbmcgY2xhc3M9InRyYWMtZmllbGQtY2MiPkNjPC9zdHJvbmc+CiAgICAgICAgPGVtPnJ5YW5vQOKApjwvZW0+IHJlbW92ZWQKICAgIDwvbGk+CiAgPC91bD4KCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbmdlIiBpZD0idHJhYy1jaGFuZ2UtMTItMTM4NjMxNTIzNTczOTE3MyI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6MTIiPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjEyIj5jb21tZW50OjEyPC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0xMi0wNlQwOCUzQTMzJTNBNTUlMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IERlYyA2LCAyMDEzIDg6MzM6NTUgQU0iPjIgeWVhcnMgYWdvPC9hPiBieSA8c3BhbiBjbGFzcz0idHJhYy1hdXRob3IiPnN0ZXJrcmlnQOKApjwvc3Bhbj4KICA8L2gzPgogIDxkaXYgY2xhc3M9InRyYWMtdGlja2V0LWJ1dHRvbnMiPgogICAgPGZvcm0gaWQ9InJlcGx5LXRvLWNvbW1lbnQtMTIiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjEyIiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSLihrMgUmVwbHkiIHRpdGxlPSJSZXBseSB0byBjb21tZW50IDEyIiAvPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2Rpdj4KICA8dWwgY2xhc3M9ImNoYW5nZXMiPgogICAgPGxpIGNsYXNzPSJ0cmFjLWZpZWxkLWNjIj4KICAgICAgPHN0cm9uZyBjbGFzcz0idHJhYy1maWVsZC1jYyI+Q2M8L3N0cm9uZz4KICAgICAgICA8ZW0+c3RlcmtyaWdA4oCmPC9lbT4gYWRkZWQKICAgIDwvbGk+CiAgPC91bD4KCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbmdlIiBpZD0idHJhYy1jaGFuZ2UtMTMtMTM4NzAzNDcxMTQwNTg1MCI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6MTMiPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjEzIj5jb21tZW50OjEzPC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxMy0xMi0xNFQxNiUzQTI1JTNBMTElMkIwMSUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IERlYyAxNCwgMjAxMyA0OjI1OjExIFBNIj4yIHllYXJzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5SeWFuIEogT2xsb3M8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTEzIiBtZXRob2Q9ImdldCIgYWN0aW9uPSIjY29tbWVudCI+CiAgICAgIDxkaXYgY2xhc3M9ImlubGluZWJ1dHRvbnMiPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcGx5dG8iIHZhbHVlPSIxMyIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0i4oazIFJlcGx5IiB0aXRsZT0iUmVwbHkgdG8gY29tbWVudCAxMyIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgPHVsIGNsYXNzPSJjaGFuZ2VzIj4KICAgIDxsaSBjbGFzcz0idHJhYy1maWVsZC1rZXl3b3JkcyI+CiAgICAgIDxzdHJvbmcgY2xhc3M9InRyYWMtZmllbGQta2V5d29yZHMiPktleXdvcmRzPC9zdHJvbmc+CiAgICAgICAgPGVtPkNvbW1pdFRpY2tldFVwZGF0ZXI8L2VtPiBhZGRlZAogICAgPC9saT4KICA8L3VsPgoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS0xNC0xMzkyMDE5MTMyMjQ5NTM1Ij4KICAgICAgICAgICAgICAgIAogIDxoMyBjbGFzcz0iY2hhbmdlIiBpZD0iY29tbWVudDoxNCI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6MTQiPmNvbW1lbnQ6MTQ8L2E+CiAgPC9zcGFuPgogICAgPC9zcGFuPgogICAgICAgIENoYW5nZWQgPGEgY2xhc3M9InRpbWVsaW5lIiBocmVmPSIvdGltZWxpbmU/ZnJvbT0yMDE0LTAyLTEwVDA4JTNBNTglM0E1MiUyQjAxJTNBMDAmYW1wO3ByZWNpc2lvbj1zZWNvbmQiIHRpdGxlPSJTZWUgdGltZWxpbmUgYXQgRmViIDEwLCAyMDE0IDg6NTg6NTIgQU0iPjIyIG1vbnRocyBhZ288L2E+IGJ5IDxzcGFuIGNsYXNzPSJ0cmFjLWF1dGhvciI+c2tyYXR0YXJlbjwvc3Bhbj4KICA8L2gzPgogIDxkaXYgY2xhc3M9InRyYWMtdGlja2V0LWJ1dHRvbnMiPgogICAgPGZvcm0gaWQ9InJlcGx5LXRvLWNvbW1lbnQtMTQiIG1ldGhvZD0iZ2V0IiBhY3Rpb249IiNjb21tZW50Ij4KICAgICAgPGRpdiBjbGFzcz0iaW5saW5lYnV0dG9ucyI+CiAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgdmFsdWU9IjE0IiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSLihrMgUmVwbHkiIHRpdGxlPSJSZXBseSB0byBjb21tZW50IDE0IiAvPgogICAgICA8L2Rpdj4KICAgIDwvZm9ybT4KICA8L2Rpdj4KICA8dWwgY2xhc3M9ImNoYW5nZXMiPgogICAgPGxpIGNsYXNzPSJ0cmFjLWZpZWxkLWNjIj4KICAgICAgPHN0cm9uZyBjbGFzcz0idHJhYy1maWVsZC1jYyI+Q2M8L3N0cm9uZz4KICAgICAgICA8ZW0+c2tyYXR0YXJlbkDigKY8L2VtPiBhZGRlZAogICAgPC9saT4KICA8L3VsPgoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS0xNS0xMzk3ODIwNzU2MjQ3NDkyIj4KICAgICAgICAgICAgICAgIAogIDxoMyBjbGFzcz0iY2hhbmdlIiBpZD0iY29tbWVudDoxNSI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6MTUiPmNvbW1lbnQ6MTU8L2E+CiAgPC9zcGFuPgogICAgPC9zcGFuPgogICAgICAgIENoYW5nZWQgPGEgY2xhc3M9InRpbWVsaW5lIiBocmVmPSIvdGltZWxpbmU/ZnJvbT0yMDE0LTA0LTE4VDEzJTNBMzIlM0EzNiUyQjAyJTNBMDAmYW1wO3ByZWNpc2lvbj1zZWNvbmQiIHRpdGxlPSJTZWUgdGltZWxpbmUgYXQgQXByIDE4LCAyMDE0IDE6MzI6MzYgUE0iPjE5IG1vbnRocyBhZ288L2E+IGJ5IDxzcGFuIGNsYXNzPSJ0cmFjLWF1dGhvciI+cGF0cmljay5saXR0bGVA4oCmPC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgICA8Zm9ybSBpZD0icmVwbHktdG8tY29tbWVudC0xNSIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iI2NvbW1lbnQiPgogICAgICA8ZGl2IGNsYXNzPSJpbmxpbmVidXR0b25zIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBseXRvIiB2YWx1ZT0iMTUiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgMTUiIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29tbWVudCBzZWFyY2hhYmxlIj4KICAgICAgPHA+ClBsZWFzZSBjbGVhciB0aGUgcmVwb3J0ZWQgYnkgZmllbGQgLSBJIG5vIGxvbmdlciBhbSB1c2luZyBUcmFjIGFuZCBkbyBub3Qgd2FudCB0byBrZWVwIGdldHRpbmcgdGlja2V0IHVwZGF0ZXMgd2hlbiBzb21ldGhpbmcgY2hhbmdlcy4KPC9wPgoKICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS0xNi0xMzk3ODQ2MTY1NDAyOTExIj4KICAgICAgICAgICAgICAgIAogIDxoMyBjbGFzcz0iY2hhbmdlIiBpZD0iY29tbWVudDoxNiI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6MTYiPmNvbW1lbnQ6MTY8L2E+CiAgPC9zcGFuPgogICAgPC9zcGFuPgogICAgICAgIENoYW5nZWQgPGEgY2xhc3M9InRpbWVsaW5lIiBocmVmPSIvdGltZWxpbmU/ZnJvbT0yMDE0LTA0LTE4VDIwJTNBMzYlM0EwNSUyQjAyJTNBMDAmYW1wO3ByZWNpc2lvbj1zZWNvbmQiIHRpdGxlPSJTZWUgdGltZWxpbmUgYXQgQXByIDE4LCAyMDE0IDg6MzY6MDUgUE0iPjE5IG1vbnRocyBhZ288L2E+IGJ5IDxzcGFuIGNsYXNzPSJ0cmFjLWF1dGhvciI+UnlhbiBKIE9sbG9zPC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgICA8Zm9ybSBpZD0icmVwbHktdG8tY29tbWVudC0xNiIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iI2NvbW1lbnQiPgogICAgICA8ZGl2IGNsYXNzPSJpbmxpbmVidXR0b25zIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBseXRvIiB2YWx1ZT0iMTYiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgMTYiIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iY2hhbmdlcyI+CiAgICA8bGkgY2xhc3M9InRyYWMtZmllbGQtcmVwb3J0ZXIiPgogICAgICA8c3Ryb25nIGNsYXNzPSJ0cmFjLWZpZWxkLXJlcG9ydGVyIj5SZXBvcnRlcjwvc3Ryb25nPgogICAgICAgIGNoYW5nZWQgZnJvbSA8ZW0+cGF0cmljay5saXR0bGVA4oCmPC9lbT4gdG8gPGVtPnBhdHJpY2subGl0dGxlPC9lbT4KICAgIDwvbGk+CiAgPC91bD4KCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbmdlIiBpZD0idHJhYy1jaGFuZ2UtMTctMTQwNjk0NDI3NDQwNTQyOSI+CiAgICAgICAgICAgICAgICAKICA8aDMgY2xhc3M9ImNoYW5nZSIgaWQ9ImNvbW1lbnQ6MTciPgogICAgPHNwYW4gY2xhc3M9InRocmVhZGluZyI+CiAgICAgIDxzcGFuIGNsYXNzPSJjbnVtIj4KICAgIDxhIGhyZWY9IiNjb21tZW50OjE3Ij5jb21tZW50OjE3PC9hPgogIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgICAgICBDaGFuZ2VkIDxhIGNsYXNzPSJ0aW1lbGluZSIgaHJlZj0iL3RpbWVsaW5lP2Zyb209MjAxNC0wOC0wMlQwMyUzQTUxJTNBMTQlMkIwMiUzQTAwJmFtcDtwcmVjaXNpb249c2Vjb25kIiB0aXRsZT0iU2VlIHRpbWVsaW5lIGF0IEF1ZyAyLCAyMDE0IDM6NTE6MTQgQU0iPjE2IG1vbnRocyBhZ288L2E+IGJ5IDxzcGFuIGNsYXNzPSJ0cmFjLWF1dGhvciI+UnlhbiBKIE9sbG9zPC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgICA8Zm9ybSBpZD0icmVwbHktdG8tY29tbWVudC0xNyIgbWV0aG9kPSJnZXQiIGFjdGlvbj0iI2NvbW1lbnQiPgogICAgICA8ZGl2IGNsYXNzPSJpbmxpbmVidXR0b25zIj4KICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBseXRvIiB2YWx1ZT0iMTciIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuKGsyBSZXBseSIgdGl0bGU9IlJlcGx5IHRvIGNvbW1lbnQgMTciIC8+CiAgICAgIDwvZGl2PgogICAgPC9mb3JtPgogIDwvZGl2PgogIDx1bCBjbGFzcz0iY2hhbmdlcyI+CiAgICA8bGkgY2xhc3M9InRyYWMtZmllbGQtbWlsZXN0b25lIj4KICAgICAgPHN0cm9uZyBjbGFzcz0idHJhYy1maWVsZC1taWxlc3RvbmUiPk1pbGVzdG9uZTwvc3Ryb25nPgogICAgICAgIGNoYW5nZWQgZnJvbSA8ZW0+dW5zY2hlZHVsZWQ8L2VtPiB0byA8ZW0+bmV4dC1tYWpvci1yZWxlYXNlczwvZW0+CiAgICA8L2xpPjxsaSBjbGFzcz0idHJhYy1maWVsZC1wcmlvcml0eSI+CiAgICAgIDxzdHJvbmcgY2xhc3M9InRyYWMtZmllbGQtcHJpb3JpdHkiPlByaW9yaXR5PC9zdHJvbmc+CiAgICAgICAgY2hhbmdlZCBmcm9tIDxlbT5oaWdoZXN0PC9lbT4gdG8gPGVtPm5vcm1hbDwvZW0+CiAgICA8L2xpPjxsaSBjbGFzcz0idHJhYy1maWVsZC1zZXZlcml0eSI+CiAgICAgIDxzdHJvbmcgY2xhc3M9InRyYWMtZmllbGQtc2V2ZXJpdHkiPlNldmVyaXR5PC9zdHJvbmc+CiAgICAgICAgY2hhbmdlZCBmcm9tIDxlbT5tYWpvcjwvZW0+IHRvIDxlbT5ub3JtYWw8L2VtPgogICAgPC9saT4KICA8L3VsPgoKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFuZ2UiIGlkPSJ0cmFjLWNoYW5nZS0xOC0xNDIyOTc5OTYyMDQ1NDM3Ij4KICAgICAgICAgICAgICAgIAogIDxoMyBjbGFzcz0iY2hhbmdlIiBpZD0iY29tbWVudDoxOCI+CiAgICA8c3BhbiBjbGFzcz0idGhyZWFkaW5nIj4KICAgICAgPHNwYW4gY2xhc3M9ImNudW0iPgogICAgPGEgaHJlZj0iI2NvbW1lbnQ6MTgiPmNvbW1lbnQ6MTg8L2E+CiAgPC9zcGFuPgogICAgPC9zcGFuPgogICAgICAgIENoYW5nZWQgPGEgY2xhc3M9InRpbWVsaW5lIiBocmVmPSIvdGltZWxpbmU/ZnJvbT0yMDE1LTAyLTAzVDE3JTNBMTIlM0E0MiUyQjAxJTNBMDAmYW1wO3ByZWNpc2lvbj1zZWNvbmQiIHRpdGxlPSJTZWUgdGltZWxpbmUgYXQgRmViIDMsIDIwMTUgNToxMjo0MiBQTSI+MTAgbW9udGhzIGFnbzwvYT4gYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yIj5SeWFuIEogT2xsb3M8L3NwYW4+CiAgPC9oMz4KICA8ZGl2IGNsYXNzPSJ0cmFjLXRpY2tldC1idXR0b25zIj4KICAgIDxmb3JtIGlkPSJyZXBseS10by1jb21tZW50LTE4IiBtZXRob2Q9ImdldCIgYWN0aW9uPSIjY29tbWVudCI+CiAgICAgIDxkaXYgY2xhc3M9ImlubGluZWJ1dHRvbnMiPgogICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcGx5dG8iIHZhbHVlPSIxOCIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0i4oazIFJlcGx5IiB0aXRsZT0iUmVwbHkgdG8gY29tbWVudCAxOCIgLz4KICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CiAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21tZW50IHNlYXJjaGFibGUiPgogICAgICA8cD4KPGEgY2xhc3M9ImNsb3NlZCB0aWNrZXQiIGhyZWY9Ii90aWNrZXQvMTE5NDciIHRpdGxlPSJlbmhhbmNlbWVudDogaW4gQ29tbWl0VGlja2V0VXBkYXRlcjogYWxsb3cgdG8gc2V0IGN1c3RvbSB3b3JrZmxvdyBzdGF0ZSBmb3IgZml4ZWQgLi4uIChjbG9zZWQ6IGR1cGxpY2F0ZSkiPiMxMTk0NzwvYT4gY2xvc2VkIGFzIGEgZHVwbGljYXRlLgo8L3A+CgogICAgPC9kaXY+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgaWQ9InByb3BlcnR5Zm9ybSIgYWN0aW9uPSIvdGlja2V0LzEwNzU1I3RyYWMtYWRkLWNvbW1lbnQiPjxkaXY+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19GT1JNX1RPS0VOIiB2YWx1ZT0iODNjZWU3MDQzNzQ4NWU4OGVmMDczZmJkIiAvPjwvZGl2PgogICAgPGRpdj4KICAgICAgICAgIDxoMyBjbGFzcz0iZm9sZGFibGUiPk1vZGlmeSBUaWNrZXQ8L2gzPgogICAgICAgICAgPGRpdiBpZD0ibW9kaWZ5Ij4KICAgICAgICAgICAgPGZpZWxkc2V0IGlkPSJwcm9wZXJ0aWVzIj4KICAgICAgICAgICAgICA8bGVnZW5kPgogICAgICAgICAgICAgICAgICBDaGFuZ2UgUHJvcGVydGllcwogICAgICAgICAgICAgIDwvbGVnZW5kPgogICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idHJhYy1wcm9wZXJ0aWVzIj4KICAgICAgICAgICAgICAgIDxjb2wgY2xhc3M9InRoIiAvPjxjb2wgY2xhc3M9InRkIiAvPjxjb2wgY2xhc3M9InRoIiAvPjxjb2wgY2xhc3M9InRkIiAvPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGg+PGxhYmVsIGZvcj0iZmllbGQtc3VtbWFyeSI+U3VtbWFyeTo8L2xhYmVsPjwvdGg+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZnVsbHJvdyIgY29sc3Bhbj0iMyI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJmaWVsZC1zdW1tYXJ5IiBuYW1lPSJmaWVsZF9zdW1tYXJ5IiB2YWx1ZT0iQ29tbWl0VGlja2V0VXBkYXRlciBkb2VzIG5vdCBhbGxvdyB1c2VyIHRvIGRlZmluZSB3aGF0IHN0YXRlIHRvIGp1bXAgdG8iIC8+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRyYWMtdGV4dGFyZWEiPjxsYWJlbCBmb3I9ImZpZWxkLWRlc2NyaXB0aW9uIj5EZXNjcmlwdGlvbjo8L2xhYmVsPjwvdGg+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iZnVsbHJvdyIgY29sc3Bhbj0iMyI+CiAgICAgICAgICAgICAgICAgICAgPGZpZWxkc2V0PgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZmllbGQtZGVzY3JpcHRpb24iIGlkPSJmaWVsZC1kZXNjcmlwdGlvbi1oZWxwIj5Zb3UgbWF5IHVzZSA8YSB0YWJpbmRleD0iNDIiIGhyZWY9Ii93aWtpL1dpa2lGb3JtYXR0aW5nIj5XaWtpRm9ybWF0dGluZzwvYT4gaGVyZS48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJmaWVsZC1kZXNjcmlwdGlvbiIgbmFtZT0iZmllbGRfZGVzY3JpcHRpb24iIGNsYXNzPSJ3aWtpdGV4dCB0cmFjLWZ1bGx3aWR0aCB0cmFjLXJlc2l6YWJsZSIgcm93cz0iMTAiIGNvbHM9IjY4Ij4KVGhlIENvbW1pdFRpY2tldFVwZGF0ZXIgd2lsbCBvbmx5IGV2ZXIgY2xvc2UgYSB0aWNrZXQuIEluIGdlbmVyYWwsIHRoZSBjbG9zZWQgc3RhdGUgaXMgZm9yIHdoZW4gbm8gbW9yZSB3b3JrIGlzIHRvIGJlIGRvbmUsIGFrYSAnJ2FmdGVyJycgUUEgaGFzIHZlcmlmaWVkIHRoZSBmaXguIFRyYWMgc2hvdWxkIGFsbG93IGNvbmZpZ3VyYXRpb24gb2Ygd2hhdCBzdGF0ZSBuYW1lIHRoZSB0aWNrZXQgd2lsbCBnZXQgdXBkYXRlZCB0by48L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sMSI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJmaWVsZC10eXBlIj5UeXBlOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbDEiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJmaWVsZC10eXBlIiBuYW1lPSJmaWVsZF90eXBlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJkZWZlY3QiPmRlZmVjdDwvb3B0aW9uPjxvcHRpb24gc2VsZWN0ZWQ9InNlbGVjdGVkIiB2YWx1ZT0iZW5oYW5jZW1lbnQiPmVuaGFuY2VtZW50PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0idGFzayI+dGFzazwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sMiI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJmaWVsZC1wcmlvcml0eSI+UHJpb3JpdHk6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9ImZpZWxkLXByaW9yaXR5IiBuYW1lPSJmaWVsZF9wcmlvcml0eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iaGlnaGVzdCI+aGlnaGVzdDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImhpZ2giPmhpZ2g8L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkPSJzZWxlY3RlZCIgdmFsdWU9Im5vcm1hbCI+bm9ybWFsPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0ibG93Ij5sb3c8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJsb3dlc3QiPmxvd2VzdDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wxIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZpZWxkLW1pbGVzdG9uZSI+TWlsZXN0b25lOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbDEiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJmaWVsZC1taWxlc3RvbmUiIG5hbWU9ImZpZWxkX21pbGVzdG9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbj48L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0Z3JvdXAgbGFiZWw9Ik9wZW4gKGJ5IGR1ZSBkYXRlKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIwLjEyLjgiPjAuMTIuODwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMiI+MS4yPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wLjEwIj4xLjAuMTA8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxLjMuMSI+MS4zLjE8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L29wdGdyb3VwPjxvcHRncm91cCBsYWJlbD0iT3BlbiAobm8gZHVlIGRhdGUpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Im5leHQtZGV2LTEuMS54Ij5uZXh0LWRldi0xLjEueDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Im5leHQtZGV2LTEuMy54Ij5uZXh0LWRldi0xLjMueDwvb3B0aW9uPjxvcHRpb24gc2VsZWN0ZWQ9InNlbGVjdGVkIiB2YWx1ZT0ibmV4dC1tYWpvci1yZWxlYXNlcyI+bmV4dC1tYWpvci1yZWxlYXNlczwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Im5leHQtc3RhYmxlLTEuMC54Ij5uZXh0LXN0YWJsZS0xLjAueDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Im5vdCBhcHBsaWNhYmxlIj5ub3QgYXBwbGljYWJsZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InBsdWdpbiAtIG1lcmN1cmlhbCI+cGx1Z2luIC0gbWVyY3VyaWFsPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icGx1Z2luIC0gc3BhbS1maWx0ZXIiPnBsdWdpbiAtIHNwYW0tZmlsdGVyPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0idG9waWMtbXVsdGlwcm9qZWN0Ij50b3BpYy1tdWx0aXByb2plY3Q8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ0b3BpYy13aWtpZW5naW5lIj50b3BpYy13aWtpZW5naW5lPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0idHJhbnNsYXRpb25zIj50cmFuc2xhdGlvbnM8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ1bmRlY2lkZWQiPnVuZGVjaWRlZDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InVuc2NoZWR1bGVkIj51bnNjaGVkdWxlZDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvb3B0Z3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wyIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZpZWxkLWNvbXBvbmVudCI+Q29tcG9uZW50OjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbDIiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJmaWVsZC1jb21wb25lbnQiIG5hbWU9ImZpZWxkX2NvbXBvbmVudCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iYWRtaW4vY29uc29sZSI+YWRtaW4vY29uc29sZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImFkbWluL3dlYiI+YWRtaW4vd2ViPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iYXR0YWNobWVudCI+YXR0YWNobWVudDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImNvbnRyaWIiPmNvbnRyaWI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJkYXRhYmFzZSBiYWNrZW5kIj5kYXRhYmFzZSBiYWNrZW5kPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iZ2VuZXJhbCI+Z2VuZXJhbDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImkxOG4iPmkxOG48L29wdGlvbj48b3B0aW9uIHZhbHVlPSJub3RpZmljYXRpb24iPm5vdGlmaWNhdGlvbjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InBsdWdpbi9naXQiPnBsdWdpbi9naXQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJwbHVnaW4vbWVyY3VyaWFsIj5wbHVnaW4vbWVyY3VyaWFsPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icGx1Z2luL3NwYW1maWx0ZXIiPnBsdWdpbi9zcGFtZmlsdGVyPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icHJvamVjdCI+cHJvamVjdDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InF1ZXJ5IHN5c3RlbSI+cXVlcnkgc3lzdGVtPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icmVuZGVyaW5nIj5yZW5kZXJpbmc8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJyZXBvcnQgc3lzdGVtIj5yZXBvcnQgc3lzdGVtPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0icm9hZG1hcCI+cm9hZG1hcDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InNlYXJjaCBzeXN0ZW0iPnNlYXJjaCBzeXN0ZW08L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkPSJzZWxlY3RlZCIgdmFsdWU9InRpY2tldCBzeXN0ZW0iPnRpY2tldCBzeXN0ZW08L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ0aW1lbGluZSI+dGltZWxpbmU8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ2ZXJzaW9uIGNvbnRyb2wiPnZlcnNpb24gY29udHJvbDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InZlcnNpb24gY29udHJvbC9icm93c2VyIj52ZXJzaW9uIGNvbnRyb2wvYnJvd3Nlcjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9InZlcnNpb24gY29udHJvbC9jaGFuZ2VzZXQgdmlldyI+dmVyc2lvbiBjb250cm9sL2NoYW5nZXNldCB2aWV3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0idmVyc2lvbiBjb250cm9sL2xvZyB2aWV3Ij52ZXJzaW9uIGNvbnRyb2wvbG9nIHZpZXc8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ3ZWIgZnJvbnRlbmQiPndlYiBmcm9udGVuZDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IndlYiBmcm9udGVuZC9tb2RfcHl0aG9uIj53ZWIgZnJvbnRlbmQvbW9kX3B5dGhvbjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IndlYiBmcm9udGVuZC90cmFjZCI+d2ViIGZyb250ZW5kL3RyYWNkPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0id2lraSBzeXN0ZW0iPndpa2kgc3lzdGVtPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbDEiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZmllbGQtdmVyc2lvbiI+VmVyc2lvbjo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wxIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0iZmllbGQtdmVyc2lvbiIgbmFtZT0iZmllbGRfdmVyc2lvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbj48L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxLjJkZXYiPjEuMmRldjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMWRldiI+MS4xZGV2PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wZGV2Ij4xLjBkZXY8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxLjAtc3RhYmxlIj4xLjAtc3RhYmxlPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMmRldiI+MC4xMmRldjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjAuMTItc3RhYmxlIj4wLjEyLXN0YWJsZTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMC45Ij4xLjAuOTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMC44Ij4xLjAuODwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMS42Ij4xLjEuNjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMC43Ij4xLjAuNzwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjAuMTIuNyI+MC4xMi43PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wLjYiPjEuMC42PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4xLjUiPjEuMS41PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4xLjQiPjEuMS40PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wLjUiPjEuMC41PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wLjQiPjEuMC40PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4xLjMiPjEuMS4zPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wLjMiPjEuMC4zPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4xLjIiPjEuMS4yPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMS4wLjIiPjEuMC4yPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMi42Ij4wLjEyLjY8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxLjAuMSI+MS4wLjE8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjEyLjUiPjAuMTIuNTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMS4xZGV2Ij4xLjEuMWRldjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEuMCI+MS4wPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMi40Ij4wLjEyLjQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxLjBiMSI+MS4wYjE8L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkPSJzZWxlY3RlZCIgdmFsdWU9IjAuMTIuMyI+MC4xMi4zPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMi4yIj4wLjEyLjI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjEyLjJyYzEiPjAuMTIuMnJjMTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjAuMTIuMSI+MC4xMi4xPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xM2RldiI+MC4xM2Rldjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjAuMTIiPjAuMTI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjEycmMxIj4wLjEycmMxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMmIxIj4wLjEyYjE8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjExLjciPjAuMTEuNzwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjAuMTEuNiI+MC4xMS42PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMS41Ij4wLjExLjU8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjEwLjUiPjAuMTAuNTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjAuMTAuNCI+MC4xMC40PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMC4xMC4xIj4wLjEwLjE8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjkuNiI+MC45LjY8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjkuMyI+MC45LjM8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIwLjguNCI+MC44LjQ8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbDIiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZmllbGQtc2V2ZXJpdHkiPlNldmVyaXR5OjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbDIiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJmaWVsZC1zZXZlcml0eSIgbmFtZT0iZmllbGRfc2V2ZXJpdHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImJsb2NrZXIiPmJsb2NrZXI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJjcml0aWNhbCI+Y3JpdGljYWw8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJtYWpvciI+bWFqb3I8L29wdGlvbj48b3B0aW9uIHNlbGVjdGVkPSJzZWxlY3RlZCIgdmFsdWU9Im5vcm1hbCI+bm9ybWFsPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0ibWlub3IiPm1pbm9yPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0idHJpdmlhbCI+dHJpdmlhbDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wxIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZpZWxkLWtleXdvcmRzIj5LZXl3b3Jkczo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wxIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZmllbGQta2V5d29yZHMiIG5hbWU9ImZpZWxkX2tleXdvcmRzIiB2YWx1ZT0iQ29tbWl0VGlja2V0VXBkYXRlciIgLz4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sMiI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJmaWVsZC1jYyI+Q2M6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iY29sMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxlbT5TZXQgeW91ciBlbWFpbCBpbiA8YSBocmVmPSIvcHJlZnMiIGNsYXNzPSJ0cmFjLXRhcmdldC1uZXciPlByZWZlcmVuY2VzPC9hPjwvZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJmaWVsZC1jYyIgbmFtZT0iY2NfdXBkYXRlIiB0aXRsZT0iVGhpcyBjaGVja2JveCBhbGxvd3MgeW91IHRvIGFkZCBvciByZW1vdmUgeW91cnNlbGYgZnJvbSB0aGUgQ0MgbGlzdC4iIGRpc2FibGVkPSJkaXNhYmxlZCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJjb2wxIHRyYWMtdGV4dGFyZWEiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZmllbGQtY2hhbmdlbG9nIj5SZWxlYXNlIE5vdGVzOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbDEgZnVsbHJvdyIgY29sc3Bhbj0iMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iZmllbGQtY2hhbmdlbG9nIiBuYW1lPSJmaWVsZF9jaGFuZ2Vsb2ciIGNvbHM9IjYwIiByb3dzPSIxIiBjbGFzcz0id2lraXRleHQgdHJhYy1yZXNpemFibGUiPgo8L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbDEgdHJhYy10ZXh0YXJlYSI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJmaWVsZC1hcGljaGFuZ2VzIj5BUEkgQ2hhbmdlczo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wxIGZ1bGxyb3ciIGNvbHNwYW49IjMiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9ImZpZWxkLWFwaWNoYW5nZXMiIG5hbWU9ImZpZWxkX2FwaWNoYW5nZXMiIGNvbHM9IjYwIiByb3dzPSIxIiBjbGFzcz0id2lraXRleHQgdHJhYy1yZXNpemFibGUiPgo8L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZmllbGRzZXQ+CiAgICAgICAgICAgIAogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIGpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkgewogICAgICAvKiBvbmx5IGVuYWJsZSBjb250cm9sIGVsZW1lbnRzIGZvciB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGFjdGlvbiAqLwogICAgICB2YXIgYWN0aW9ucyA9ICQoIiNhY3Rpb24gaW5wdXRbbmFtZT0nYWN0aW9uJ10iKTsKICAgICAgZnVuY3Rpb24gdXBkYXRlQWN0aW9uRmllbGRzKCkgewogICAgICAgIGFjdGlvbnMuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAkKHRoaXMpLnNpYmxpbmdzKCkuZmluZCgiKltpZF0iKS5lbmFibGUoJCh0aGlzKS5jaGVja2VkKCkpOwogICAgICAgICAgJCh0aGlzKS5zaWJsaW5ncygpLmZpbHRlcigiKltpZF0iKS5lbmFibGUoJCh0aGlzKS5jaGVja2VkKCkpOwogICAgICAgIH0pOwogICAgICB9CiAgICAgIGFjdGlvbnMuY2xpY2sodXBkYXRlQWN0aW9uRmllbGRzKTsKICAgICAgdXBkYXRlQWN0aW9uRmllbGRzKCk7CiAgICB9KTsKICA8L3NjcmlwdD4KICAgIDxmaWVsZHNldCBpZD0iYWN0aW9uIj4KICAgICAgPGxlZ2VuZD5BY3Rpb248L2xlZ2VuZD4KICAgICAgPGRpdj4KICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIGlkPSJhY3Rpb25fbGVhdmUiIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImxlYXZlIiBjaGVja2VkPSJjaGVja2VkIiAvPgogICAgICAgIDxsYWJlbCBmb3I9ImFjdGlvbl9sZWF2ZSI+bGVhdmU8L2xhYmVsPgogICAgICAgIGFzIG5ldwogICAgICAgIDxzcGFuIGNsYXNzPSJoaW50Ij5UaGUgdGlja2V0IHdpbGwgcmVtYWluIHdpdGggbm8gb3duZXIuPC9zcGFuPgogICAgICA8L2Rpdj48ZGl2PgogICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImFjdGlvbl91bmFzc2lnbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0idW5hc3NpZ24iIC8+CiAgICAgICAgPGxhYmVsIGZvcj0iYWN0aW9uX3VuYXNzaWduIj51bmFzc2lnbjwvbGFiZWw+CiAgICAgICAgPHNwYW4gY2xhc3M9ImhpbnQiPlRoZSB0aWNrZXQgd2lsbCBiZSBkaXNvd25lZC4gTmV4dCBzdGF0dXMgd2lsbCBiZSAnbmV3Jy48L3NwYW4+CiAgICAgIDwvZGl2PjxkaXY+CiAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0iYWN0aW9uX3Jlc29sdmUiIG5hbWU9ImFjdGlvbiIgdmFsdWU9InJlc29sdmUiIC8+CiAgICAgICAgPGxhYmVsIGZvcj0iYWN0aW9uX3Jlc29sdmUiPnJlc29sdmU8L2xhYmVsPgogICAgICAgIGFzIDxzZWxlY3QgbmFtZT0iYWN0aW9uX3Jlc29sdmVfcmVzb2x2ZV9yZXNvbHV0aW9uIiBpZD0iYWN0aW9uX3Jlc29sdmVfcmVzb2x2ZV9yZXNvbHV0aW9uIj48b3B0aW9uIHNlbGVjdGVkPSJzZWxlY3RlZCIgdmFsdWU9ImZpeGVkIj5maXhlZDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImludmFsaWQiPmludmFsaWQ8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ3b250Zml4Ij53b250Zml4PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iZHVwbGljYXRlIj5kdXBsaWNhdGU8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJ3b3Jrc2Zvcm1lIj53b3Jrc2Zvcm1lPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iY2FudGZpeCI+Y2FudGZpeDwvb3B0aW9uPjwvc2VsZWN0PgogICAgICAgIDxzcGFuIGNsYXNzPSJoaW50Ij5UaGUgcmVzb2x1dGlvbiB3aWxsIGJlIHNldC4gTmV4dCBzdGF0dXMgd2lsbCBiZSAnY2xvc2VkJy48L3NwYW4+CiAgICAgIDwvZGl2PjxkaXY+CiAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0iYWN0aW9uX2Fzc2lnbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iYXNzaWduIiAvPgogICAgICAgIDxsYWJlbCBmb3I9ImFjdGlvbl9hc3NpZ24iPmFzc2lnbjwvbGFiZWw+CiAgICAgICAgPHNwYW4gY2xhc3M9ImhpbnQiPlRoZSBvd25lciB3aWxsIGJlIGNoYW5nZWQgZnJvbSA8c3BhbiBjbGFzcz0idHJhYy1hdXRob3Itbm9uZSI+KG5vbmUpPC9zcGFuPiB0byA8c3BhbiBjbGFzcz0idHJhYy1hdXRob3ItYW5vbnltb3VzIj5hbm9ueW1vdXM8L3NwYW4+LiBOZXh0IHN0YXR1cyB3aWxsIGJlICdhc3NpZ25lZCcuPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZmllbGRzZXQ+CgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+PGRpdiBpZD0idHJhYy1hZGQtY29tbWVudCIgY2xhc3M9ImZpZWxkIj4KICAgICAgICAgIDxoMyBjbGFzcz0iZm9sZGFibGUiIGlkPSJlZGl0Ij5BZGQgQ29tbWVudDwvaDM+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2IGlkPSJ0cmFjLWVkaXQtd2FybmluZyIgY2xhc3M9Indhcm5pbmcgc3lzdGVtLW1lc3NhZ2UiIHN0eWxlPSJkaXNwbGF5OiBub25lIj5UaGlzIHRpY2tldCBoYXMgYmVlbiBtb2RpZmllZCBzaW5jZSB5b3Ugc3RhcnRlZCBlZGl0aW5nLiBZb3Ugc2hvdWxkIHJldmlldyB0aGUKICAgICAgICAgICAgICA8ZW0gY2xhc3M9InRyYWMtbmV3Ij5vdGhlciBtb2RpZmljYXRpb25zPC9lbT4gd2hpY2ggaGF2ZSBiZWVuIGFwcGVuZGVkIGFib3ZlLAogICAgICAgICAgICAgIGFuZCBhbnkgPGVtIGNsYXNzPSJ0cmFjLWNvbmZsaWN0Ij5jb25mbGljdHM8L2VtPiBzaG93biBpbiB0aGUgcHJldmlldyBiZWxvdy4KICAgICAgICAgICAgICBZb3UgY2FuIG5ldmVydGhlbGVzcyBwcm9jZWVkIGFuZCBzdWJtaXQgeW91ciBjaGFuZ2VzIGlmIHlvdSB3aXNoIHNvLjwvZGl2PgogICAgICAgICAgICA8ZmllbGRzZXQ+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXV0aG9yIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idHJhYy1wcm9wZXJ0aWVzIj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aD4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImF1dGhvciI+WW91ciBlbWFpbCBvciB1c2VybmFtZTo8L2xhYmVsPjxiciAvPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJhdXRob3IiIG5hbWU9ImF1dGhvciIgdmFsdWU9ImFub255bW91cyIgLz4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJoaW50Ij4KICAgICAgICAgICAgICAgICAgRS1tYWlsIGFkZHJlc3MgYW5kIG5hbWUgY2FuIGJlIHNhdmVkIGluIHRoZSA8YSBocmVmPSIvcHJlZnMiIGNsYXNzPSJ0cmFjLXRhcmdldC1uZXciPlByZWZlcmVuY2VzPC9hPi4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJjb21tZW50Ij5Zb3UgbWF5IHVzZSA8YSB0YWJpbmRleD0iNDIiIGhyZWY9Ii93aWtpL1dpa2lGb3JtYXR0aW5nIj5XaWtpRm9ybWF0dGluZzwvYT4gaGVyZS48L2xhYmVsPgogICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iY29tbWVudCIgbmFtZT0iY29tbWVudCIgY2xhc3M9Indpa2l0ZXh0IHRyYWMtZnVsbHdpZHRoIHRyYWMtcmVzaXphYmxlIiByb3dzPSIxMCIgY29scz0iNzgiPgo8L3RleHRhcmVhPgogICAgICAgICAgICA8L2ZpZWxkc2V0PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0idHJhYy1uYXYiPgogICAgICAgICAgPGEgaHJlZj0iI2F0dGFjaG1lbnRzIiBpZD0idHJhYy11cC1hdHRhY2htZW50cyIgdGl0bGU9IkdvIHRvIHRoZSBsaXN0IG9mIGF0dGFjaG1lbnRzIj5BdHRhY2htZW50czwvYT4g4oaRCiAgICAgICAgICA8YSBocmVmPSIjY29udGVudCIgaWQ9InRyYWMtdXAtdmlldyIgdGl0bGU9IlZpZXcgdGhlIHRpY2tldCBkZXNjcmlwdGlvbiI+RGVzY3JpcHRpb248L2E+IOKGkQogICAgICAgIDwvZGl2PjxkaXYgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJzZnBfZW1haWwiIHZhbHVlPSIiIC8+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic2ZwaF9tYWlsIiB2YWx1ZT0iIiAvPjwvZGl2PjxkaXYgY2xhc3M9ImJ1dHRvbnMiPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdGFydF90aW1lIiB2YWx1ZT0iMTQyMjk3OTk2MjA0NTQzNyIgLz4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idmlld190aW1lIiB2YWx1ZT0iMTQyMjk3OTk2MjA0NTQzNyIgLz4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwbHl0byIgLz4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InByZXZpZXciIHZhbHVlPSJQcmV2aWV3IiAvPsKgCiAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXQiIHZhbHVlPSJTdWJtaXQgY2hhbmdlcyIgY2xhc3M9InRyYWMtZGlzYWJsZS1vbi1zdWJtaXQiIC8+CiAgICAgICAgPC9kaXY+PGRpdiBpZD0idGlja2V0Y2hhbmdlIiBjbGFzcz0idGlja2V0ZHJhZnQiIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KICAgICAgICAgIAogIDxoMyBjbGFzcz0iY2hhbmdlIj4KICAgIDxzcGFuIGNsYXNzPSJ0aHJlYWRpbmciPgogICAgPC9zcGFuPgogICAgICAgIENoYW5nZWQgYnkgPHNwYW4gY2xhc3M9InRyYWMtYXV0aG9yLWFub255bW91cyI+YW5vbnltb3VzPC9zcGFuPgogICAgPHNwYW4gY2xhc3M9InRyYWMtbG9hZGluZyI+PC9zcGFuPgogIDwvaDM+CiAgPGRpdiBjbGFzcz0idHJhYy10aWNrZXQtYnV0dG9ucyI+CiAgPC9kaXY+CgogICAgICAgIDwvZGl2PgogIDwvZm9ybT4KICAgICAgPGRpdiBpZD0iaGVscCI+PHN0cm9uZz5Ob3RlOjwvc3Ryb25nPiBTZWUKICAgICAgICA8YSBocmVmPSIvd2lraS9UcmFjVGlja2V0cyI+VHJhY1RpY2tldHM8L2E+IGZvciBoZWxwIG9uIHVzaW5nCiAgICAgICAgdGlja2V0cy48L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0iYWx0bGlua3MiPgogICAgICA8aDM+RG93bmxvYWQgaW4gb3RoZXIgZm9ybWF0czo8L2gzPgogICAgICA8dWw+CiAgICAgICAgPGxpIGNsYXNzPSJmaXJzdCI+CiAgICAgICAgICA8YSByZWw9Im5vZm9sbG93IiBocmVmPSIvdGlja2V0LzEwNzU1P2Zvcm1hdD1jc3YiIGNsYXNzPSJjc3YiPkNvbW1hLWRlbGltaXRlZCBUZXh0PC9hPgogICAgICAgIDwvbGk+PGxpPgogICAgICAgICAgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iL3RpY2tldC8xMDc1NT9mb3JtYXQ9dGFiIiBjbGFzcz0idGFiIj5UYWItZGVsaW1pdGVkIFRleHQ8L2E+CiAgICAgICAgPC9saT48bGkgY2xhc3M9Imxhc3QiPgogICAgICAgICAgPGEgcmVsPSJub2ZvbGxvdyIgaHJlZj0iL3RpY2tldC8xMDc1NT9mb3JtYXQ9cnNzIiBjbGFzcz0icnNzIj5SU1MgRmVlZDwvYT4KICAgICAgICA8L2xpPgogICAgICA8L3VsPgogICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9ImZvb3RlciIgbGFuZz0iZW4iIHhtbDpsYW5nPSJlbiI+PGhyIC8+CiAgICAgIDxhIGlkPSJ0cmFjcG93ZXJlZCIgaHJlZj0iaHR0cDovL3RyYWMuZWRnZXdhbGwub3JnLyI+PGltZyBzcmM9Ii9jaHJvbWUvY29tbW9uL3RyYWNfbG9nb19taW5pLnBuZyIgaGVpZ2h0PSIzMCIgd2lkdGg9IjEwNyIgYWx0PSJUcmFjIFBvd2VyZWQiIC8+PC9hPgogICAgICA8cCBjbGFzcz0ibGVmdCI+UG93ZXJlZCBieSA8YSBocmVmPSIvYWJvdXQiPjxzdHJvbmc+VHJhYyAxLjIuZGV2MDwvc3Ryb25nPjwvYT48YnIgLz4KICAgICAgICBCeSA8YSBocmVmPSJodHRwOi8vd3d3LmVkZ2V3YWxsLm9yZy8iPkVkZ2V3YWxsIFNvZnR3YXJlPC9hPi48L3A+CiAgICAgIDxwIGNsYXNzPSJyaWdodCI+VmlzaXQgdGhlIFRyYWMgb3BlbiBzb3VyY2UgcHJvamVjdCBhdDxiciAvPjxhIGhyZWY9Imh0dHA6Ly90cmFjLmVkZ2V3YWxsLm9yZy8iPmh0dHA6Ly90cmFjLmVkZ2V3YWxsLm9yZy88L2E+PC9wPgogICAgPC9kaXY+CiAgICAgICAgPC9kaXY+PCEtLSAjZXctY29udGVudCAtLT4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9ImV3LWZvb3RlciI+CiAgICAgIDxwPjxhIGhyZWY9Im1haWx0bzppbmZvQGVkZ2V3YWxsLmNvbSI+aW5mb0BlZGdld2FsbC5jb208L2E+PC9wPgogICAgICA8cD5Db3B5cmlnaHQgwqkgMjAwMy0yMDE1IEVkZ2V3YWxsIFNvZnR3YXJlLiBBbGwgcmlnaHRzIHJlc2VydmVkLjwvcD4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0icmlnaHQiPgogICAgICA8ZGl2IGlkPSJvaGxvaC1iYWRnZSI+CiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLy93d3cub2hsb2gubmV0L3Byb2plY3RzLzMwNTIvYmFkZ2VfanMiPjwvc2NyaXB0Pgo8L2Rpdj4KIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48IS0tCiAgZ29vZ2xlX2FkX2NsaWVudCA9ICJwdWItMzc0NjI0NTM0NzAxMzE3NyI7CiAgZ29vZ2xlX2FkX3dpZHRoID0gMTIwOwogIGdvb2dsZV9hZF9oZWlnaHQgPSA2MDA7CiAgZ29vZ2xlX2FkX2Zvcm1hdCA9ICIxMjB4NjAwX2FzIjsKICBnb29nbGVfYWRfY2hhbm5lbCA9IjkwNDQ1Nzg1MTciOwogIGdvb2dsZV9hZF90eXBlID0gInRleHRfaW1hZ2UiOwogIGdvb2dsZV9jb2xvcl9ib3JkZXIgPSAiOGI4ZDhkIjsKICAvKmdvb2dsZV9jb2xvcl9ib3JkZXIgPSAiNmI2ZDZkIjsqLwogIGdvb2dsZV9jb2xvcl9iZyA9ICI2YjZkNmQiOwogIC8qZ29vZ2xlX2NvbG9yX2JnID0gIjRiNGQ0ZCI7Ki8KICBnb29nbGVfY29sb3JfbGluayA9ICIzMzY2OTkiOwogIGdvb2dsZV9jb2xvcl91cmwgPSAiRTJCMjAwIjsKICBnb29nbGVfY29sb3JfdGV4dCA9ICI4YzhjOGMiOwogIC8qZ29vZ2xlX2NvbG9yX3RleHQgPSAiY2NjY2NjIjsqLwogIC8vLS0+PC9zY3JpcHQ+CiA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvL3BhZ2VhZDIuZ29vZ2xlc3luZGljYXRpb24uY29tL3BhZ2VhZC9zaG93X2Fkcy5qcyI+CiA8L3NjcmlwdD4KICAgPC9kaXY+CiAgPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Thu, 19 Nov 2015 19:33:07 GMT
- request:
    method: get
    uri: https://gitlab.com/api/v4/projects/http:%2F%2Ftrac.edgewall.org%2Fticket%2F10755
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Private-Token:
      - yk4sv48-tHyUJNBkcf56
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Server:
      - nginx
      Date:
      - Wed, 13 Jun 2018 15:40:34 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '35'
      Cache-Control:
      - no-cache
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Request-Id:
      - 3663ad14-f124-439d-bb75-a795334b6661
      X-Runtime:
      - '0.033702'
      Ratelimit-Limit:
      - '600'
      Ratelimit-Observed:
      - '6'
      Ratelimit-Remaining:
      - '594'
      Ratelimit-Reset:
      - '1528904495'
      Ratelimit-Resettime:
      - Thu, 13 Jun 2018 15:41:35 GMT
    body:
      encoding: UTF-8
      string: '{"message":"404 Project Not Found"}'
    http_version: 
  recorded_at: Wed, 13 Jun 2018 15:40:35 GMT
recorded_with: VCR 4.0.0
